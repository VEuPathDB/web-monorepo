#!@perl@

## unloads user-comment flat file for keyword search to grep through

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use CBIL::Bio::SequenceUtils;
use GUS::Supported::GusConfig;

my ($outDir, $prefix, $commentSchema, $gusConfigFile, $debug, $verbose, $projectId);
&GetOptions("outputDir=s" => \$outDir,
            "outputPrefix=s" => \$prefix,
            "projectId=s" => \$projectId,
            "commentSchema=s" => \$commentSchema,
            "verbose!"=> \$verbose,
            "debug!" => \$debug,
            "gusConfigFile=s" => \$gusConfigFile);

if (!$outDir || !$commentSchema){
	die "usage: $0 --projectId <projectId> --outputDir <outputDirectory>"
            . " [--outputPrefix <file-prefix>]"
            . " --commentSchema <commentSchema>"
            . " [--verbose] [--debug]"
            . " [--gusConfigFile  <config (default=\$GUS_HOME/config/gus.config)>]\n";
}

print "options: --outputDir=\"$outDir\" "
      . "outputPrefix=\"$prefix\""
      . "projectId=\"$projectId\""
      . "commentSchema=\"$commentSchema\""
      . "verbose=\$verbose\""
      . "debug=\"$debug\""
      . "gusConfigFile=\"$gusConfigFile\"" if $verbose;

print "Establishing dbi login\n" if $verbose;
my $gusconfig = GUS::Supported::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase
           ->new($gusconfig->getDbiDsn(),
		 $gusconfig->getReadOnlyDatabaseLogin(),
		 $gusconfig->getReadOnlyDatabasePassword,
		 $verbose,0,1,
		 $gusconfig->getCoreSchemaName,
		 $gusconfig->getOracleDefaultRollbackSegment());

my $dbh = $db->getQueryHandle();

$dbh->{LongReadLen} = 8192 * 1024;
my $sql;

# comments
$sql = <<SQL;
SELECT '', substr(c.organism, 1, instr(c.organism || '  ', ' ', 1, 2)-1),
       c.stable_id, c.content,
       u.first_name || ' ' || u.last_name || ', ' || u.title || ', ' || u.organization
FROM userlogins.users u, ${commentSchema}.comments c
WHERE u.email(+) = c.email
  AND c.comment_target_id='gene'
  AND c.review_status_id != 'rejected'
  AND project_name = '${projectId}'
  AND c.comment_target_id = 'gene'
ORDER BY substr(c.organism, 1, instr(c.organism || '  ', ' ', 1, 2)-1),
       c.stable_id,
       u.first_name || ' ' || u.last_name || ', ' || u.title || ', ' || u.organization
SQL

&extractFile($dbh, $outDir, "comments.txt", $sql);

sub extractFile {
  my ($dbh, $outDir, $outFile, $sql) = @_;

  print "SQL: $sql\n" if $verbose;

  my $count = 0;
  my $statement = $dbh->prepare($sql);
  $statement->execute();
  my @ids;

  my $tempfile = "${outDir}/keywordQueryFlatfile.$$";

  print "tempfile: $tempfile\n" if $verbose;
  open(OUT,">$tempfile");

  while(my @row = $statement->fetchrow_array()){
    $count++;
    print "Processing record $count\n" if $verbose && $count % 10000 == 0;

    map { s/\s+/ /g } @row;
    print OUT join("\t", @row), " \n";
  }

  $statement->finish();

  close(OUT);
  my $datafile = "${outDir}/${prefix}${outFile}";
  print "renaming $tempfile to $datafile\n" if $verbose;
  rename($tempfile, $datafile);
}
 
