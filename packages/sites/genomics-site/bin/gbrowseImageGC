#!/bin/bash

# garbage collect aged temporary images from gbrowse's store, leaving those
# that are 'cached' (i.e. have a corresponding html file in cachedir).
#
# usage
#   gcGbrowseCache <days> <tmpimages>

#DEBUG=1 # no files are deleted if debug

this=$(basename "$0")

usage() {
    echo "usage:"
    echo "$this <days_old> <tmpimages>"
    echo
    echo "where <days_old> is an integer expiration age for image deletion"
    echo "and <tmpimages> is the gbrowse temporary directory (fullpath to"
    echo "the 'tmpimages' defined in the gbrowse config file)."
}

garbage_collect() {
    local age=$1
    local config=$2
    local cachedir=cachedir
    local imgdir=img
    
    cd "$config"
    
    test -d "$cachedir" || return

    images=( $(find $imgdir -mtime $age -type f | xargs -i basename '{}' 2>&- ) )
    
    for image in ${images[@]}; do
        cachefile="$(grep -rl "$image" "$cachedir")"
       if [ -z "$cachefile" ]; then
         if test $DEBUG; then
            echo removing "$imgdir/$image"
         else
            rm -f "$imgdir/$image"
         fi
       else
         test $DEBUG && echo "$cachedir/$image" in use by "$cachefile"
       fi
    done
}

######################################################
##      Main                                        ##
######################################################

age=$1
tmpdir=$2

test "$1" -ge 0 2>&- || {
    echo
    echo "FATAL: missing or invalid age"
    echo
    usage
    exit 1
}

test -d "$tmpdir" || {
    echo
    echo "No such directory '$tmpdir'"
    echo
    exit 1
}

configs=( $(find "$tmpdir" -mindepth 1 -maxdepth 1 -not -name sessions -type d) )

for config in ${configs[@]}; do
    garbage_collect "$age" "$config"
done


