#!/usr/bin/perl

use strict;
use Getopt::Long;

my $siteSet;

&GetOptions('siteSet=s' => \$siteSet,
	   );

usage() if $siteSet ne "q" && $siteSet ne "w";

my @componentList = ` find /var/www  -maxdepth 1 -type d -name '*DB' -printf "%f\n"|grep -v ApiDB`;
my @campusList = (1, 2);

foreach my $campus (@campusList) {
  foreach my $component (@componentList) {
    chomp($component);
    my $lcComponent = lc($component);
    my $site = "$siteSet$campus.$lcComponent.org";
    print "$site\t/var/www/Common/tmp/gbrowseLogs/$site/*_slow.log\t/var/log/httpd/$site/access_log\n";

  }
}

sub usage {
  print STDERR "

Generate the tab-delimited report description that gbrowseSlowQueryReport expects on its standard in, to specify what log files to report on. It can be used in a command pipeline with gbrowseSlowQueryReport.

usage:
gbrowseSlowQueryReportInput -siteSet [ q | w ]

where the siteSet parameter determines whether to specify a report on [w]ww or [q]a sites.

example command pipelines:
gbrowseSlowQueryReportInput -siteSet w | gbrowseSlowQueryReport -s 0.001 -i -d
gbrowseSlowQueryReportInput -siteSet w | grep -i crypto | gbrowseSlowQueryReport -s 0.001 -i -d
gbrowseSlowQueryReportInput -siteSet w | grep -vi EuPathDB | gbrowseSlowQueryReport -s 0.001 -i -d
gbrowseSlowQueryReportInput -siteSet q | grep q2 | gbrowseSlowQueryReport -s 0.001 -i -d
";
  exit(1);
}
