package GUS::Model::DoTS::AASequence_Row;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!

use strict;
use GUS::Model::GusRow;

use vars qw (@ISA);
@ISA = qw (GUS::Model::GusRow);

sub setDefaultParams {
  my ($self) = @_;
  $self->setVersionable(1);
  $self->setUpdateable(1);
}

sub setAaSequenceId {
  my($self,$value) = @_;
  $self->set("aa_sequence_id",$value);
}

sub getAaSequenceId {
    my($self) = @_;
  return $self->get("aa_sequence_id");
}

sub setSequenceVersion {
  my($self,$value) = @_;
  $self->set("sequence_version",$value);
}

sub getSequenceVersion {
    my($self) = @_;
  return $self->get("sequence_version");
}

sub setSubclassView {
  my($self,$value) = @_;
  $self->set("subclass_view",$value);
}

sub getSubclassView {
    my($self) = @_;
  return $self->get("subclass_view");
}

sub setMolecularWeight {
  my($self,$value) = @_;
  $self->set("molecular_weight",$value);
}

sub getMolecularWeight {
    my($self) = @_;
  return $self->get("molecular_weight");
}

sub setSequence {
  my($self,$value) = @_;
  $self->set("sequence",$value);
}

sub getSequence {
    my($self) = @_;
  return $self->get("sequence");
}

sub setLength {
  my($self,$value) = @_;
  $self->set("length",$value);
}

sub getLength {
    my($self) = @_;
  return $self->get("length");
}

sub setDescription {
  my($self,$value) = @_;
  $self->set("description",$value);
}

sub getDescription {
    my($self) = @_;
  return $self->get("description");
}

sub setExternalDatabaseReleaseId {
  my($self,$value) = @_;
  $self->set("external_database_release_id",$value);
}

sub getExternalDatabaseReleaseId {
    my($self) = @_;
  return $self->get("external_database_release_id");
}

sub setSourceId {
  my($self,$value) = @_;
  $self->set("source_id",$value);
}

sub getSourceId {
    my($self) = @_;
  return $self->get("source_id");
}

sub setSourceAaSequenceId {
  my($self,$value) = @_;
  $self->set("source_aa_sequence_id",$value);
}

sub getSourceAaSequenceId {
    my($self) = @_;
  return $self->get("source_aa_sequence_id");
}

sub setSequenceTypeId {
  my($self,$value) = @_;
  $self->set("sequence_type_id",$value);
}

sub getSequenceTypeId {
    my($self) = @_;
  return $self->get("sequence_type_id");
}

sub setSequenceOntologyId {
  my($self,$value) = @_;
  $self->set("sequence_ontology_id",$value);
}

sub getSequenceOntologyId {
    my($self) = @_;
  return $self->get("sequence_ontology_id");
}

sub setTaxonId {
  my($self,$value) = @_;
  $self->set("taxon_id",$value);
}

sub getTaxonId {
    my($self) = @_;
  return $self->get("taxon_id");
}

sub setModificationDate {
  my($self,$value) = @_;
  $self->set("modification_date",$value);
}

sub getModificationDate {
    my($self) = @_;
  return $self->get("modification_date");
}

sub setUserRead {
  my($self,$value) = @_;
  $self->set("user_read",$value);
}

sub getUserRead {
    my($self) = @_;
  return $self->get("user_read");
}

sub setUserWrite {
  my($self,$value) = @_;
  $self->set("user_write",$value);
}

sub getUserWrite {
    my($self) = @_;
  return $self->get("user_write");
}

sub setGroupRead {
  my($self,$value) = @_;
  $self->set("group_read",$value);
}

sub getGroupRead {
    my($self) = @_;
  return $self->get("group_read");
}

sub setGroupWrite {
  my($self,$value) = @_;
  $self->set("group_write",$value);
}

sub getGroupWrite {
    my($self) = @_;
  return $self->get("group_write");
}

sub setOtherRead {
  my($self,$value) = @_;
  $self->set("other_read",$value);
}

sub getOtherRead {
    my($self) = @_;
  return $self->get("other_read");
}

sub setOtherWrite {
  my($self,$value) = @_;
  $self->set("other_write",$value);
}

sub getOtherWrite {
    my($self) = @_;
  return $self->get("other_write");
}

sub setRowUserId {
  my($self,$value) = @_;
  $self->set("row_user_id",$value);
}

sub getRowUserId {
    my($self) = @_;
  return $self->get("row_user_id");
}

sub setRowGroupId {
  my($self,$value) = @_;
  $self->set("row_group_id",$value);
}

sub getRowGroupId {
    my($self) = @_;
  return $self->get("row_group_id");
}

sub setRowProjectId {
  my($self,$value) = @_;
  $self->set("row_project_id",$value);
}

sub getRowProjectId {
    my($self) = @_;
  return $self->get("row_project_id");
}

sub setRowAlgInvocationId {
  my($self,$value) = @_;
  $self->set("row_alg_invocation_id",$value);
}

sub getRowAlgInvocationId {
    my($self) = @_;
  return $self->get("row_alg_invocation_id");
}

1;
