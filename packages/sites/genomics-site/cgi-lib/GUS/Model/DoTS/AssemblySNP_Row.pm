package GUS::Model::DoTS::AssemblySNP_Row;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!

use strict;
use GUS::Model::GusRow;

use vars qw (@ISA);
@ISA = qw (GUS::Model::GusRow);

sub setDefaultParams {
  my ($self) = @_;
  $self->setVersionable(1);
  $self->setUpdateable(1);
}

sub setAssemblySnpId {
  my($self,$value) = @_;
  $self->set("assembly_snp_id",$value);
}

sub getAssemblySnpId {
    my($self) = @_;
  return $self->get("assembly_snp_id");
}

sub setNaSequenceId {
  my($self,$value) = @_;
  $self->set("na_sequence_id",$value);
}

sub getNaSequenceId {
    my($self) = @_;
  return $self->get("na_sequence_id");
}

sub setNumA {
  my($self,$value) = @_;
  $self->set("num_a",$value);
}

sub getNumA {
    my($self) = @_;
  return $self->get("num_a");
}

sub setNumC {
  my($self,$value) = @_;
  $self->set("num_c",$value);
}

sub getNumC {
    my($self) = @_;
  return $self->get("num_c");
}

sub setNumG {
  my($self,$value) = @_;
  $self->set("num_g",$value);
}

sub getNumG {
    my($self) = @_;
  return $self->get("num_g");
}

sub setNumT {
  my($self,$value) = @_;
  $self->set("num_t",$value);
}

sub getNumT {
    my($self) = @_;
  return $self->get("num_t");
}

sub setNumOther {
  my($self,$value) = @_;
  $self->set("num_other",$value);
}

sub getNumOther {
    my($self) = @_;
  return $self->get("num_other");
}

sub setNuc1 {
  my($self,$value) = @_;
  $self->set("nuc_1",$value);
}

sub getNuc1 {
    my($self) = @_;
  return $self->get("nuc_1");
}

sub setNuc2 {
  my($self,$value) = @_;
  $self->set("nuc_2",$value);
}

sub getNuc2 {
    my($self) = @_;
  return $self->get("nuc_2");
}

sub setNuc3 {
  my($self,$value) = @_;
  $self->set("nuc_3",$value);
}

sub getNuc3 {
    my($self) = @_;
  return $self->get("nuc_3");
}

sub setNuc4 {
  my($self,$value) = @_;
  $self->set("nuc_4",$value);
}

sub getNuc4 {
    my($self) = @_;
  return $self->get("nuc_4");
}

sub setNumNuc1 {
  my($self,$value) = @_;
  $self->set("num_nuc_1",$value);
}

sub getNumNuc1 {
    my($self) = @_;
  return $self->get("num_nuc_1");
}

sub setNumNuc2 {
  my($self,$value) = @_;
  $self->set("num_nuc_2",$value);
}

sub getNumNuc2 {
    my($self) = @_;
  return $self->get("num_nuc_2");
}

sub setNumNuc3 {
  my($self,$value) = @_;
  $self->set("num_nuc_3",$value);
}

sub getNumNuc3 {
    my($self) = @_;
  return $self->get("num_nuc_3");
}

sub setNumNuc4 {
  my($self,$value) = @_;
  $self->set("num_nuc_4",$value);
}

sub getNumNuc4 {
    my($self) = @_;
  return $self->get("num_nuc_4");
}

sub setFractionNuc1 {
  my($self,$value) = @_;
  $self->set("fraction_nuc_1",$value);
}

sub getFractionNuc1 {
    my($self) = @_;
  return $self->get("fraction_nuc_1");
}

sub setNumDistinctAcgt {
  my($self,$value) = @_;
  $self->set("num_distinct_acgt",$value);
}

sub getNumDistinctAcgt {
    my($self) = @_;
  return $self->get("num_distinct_acgt");
}

sub setAssemblyDepth {
  my($self,$value) = @_;
  $self->set("assembly_depth",$value);
}

sub getAssemblyDepth {
    my($self) = @_;
  return $self->get("assembly_depth");
}

sub setAssemblyPosition {
  my($self,$value) = @_;
  $self->set("assembly_position",$value);
}

sub getAssemblyPosition {
    my($self) = @_;
  return $self->get("assembly_position");
}

sub setConsensusPosition {
  my($self,$value) = @_;
  $self->set("consensus_position",$value);
}

sub getConsensusPosition {
    my($self) = @_;
  return $self->get("consensus_position");
}

sub setModificationDate {
  my($self,$value) = @_;
  $self->set("modification_date",$value);
}

sub getModificationDate {
    my($self) = @_;
  return $self->get("modification_date");
}

sub setUserRead {
  my($self,$value) = @_;
  $self->set("user_read",$value);
}

sub getUserRead {
    my($self) = @_;
  return $self->get("user_read");
}

sub setUserWrite {
  my($self,$value) = @_;
  $self->set("user_write",$value);
}

sub getUserWrite {
    my($self) = @_;
  return $self->get("user_write");
}

sub setGroupRead {
  my($self,$value) = @_;
  $self->set("group_read",$value);
}

sub getGroupRead {
    my($self) = @_;
  return $self->get("group_read");
}

sub setGroupWrite {
  my($self,$value) = @_;
  $self->set("group_write",$value);
}

sub getGroupWrite {
    my($self) = @_;
  return $self->get("group_write");
}

sub setOtherRead {
  my($self,$value) = @_;
  $self->set("other_read",$value);
}

sub getOtherRead {
    my($self) = @_;
  return $self->get("other_read");
}

sub setOtherWrite {
  my($self,$value) = @_;
  $self->set("other_write",$value);
}

sub getOtherWrite {
    my($self) = @_;
  return $self->get("other_write");
}

sub setRowUserId {
  my($self,$value) = @_;
  $self->set("row_user_id",$value);
}

sub getRowUserId {
    my($self) = @_;
  return $self->get("row_user_id");
}

sub setRowGroupId {
  my($self,$value) = @_;
  $self->set("row_group_id",$value);
}

sub getRowGroupId {
    my($self) = @_;
  return $self->get("row_group_id");
}

sub setRowProjectId {
  my($self,$value) = @_;
  $self->set("row_project_id",$value);
}

sub getRowProjectId {
    my($self) = @_;
  return $self->get("row_project_id");
}

sub setRowAlgInvocationId {
  my($self,$value) = @_;
  $self->set("row_alg_invocation_id",$value);
}

sub getRowAlgInvocationId {
    my($self) = @_;
  return $self->get("row_alg_invocation_id");
}

1;
