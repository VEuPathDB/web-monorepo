package GUS::Model::DoTS::AssemblySequence_Table;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!


use strict;
use GUS::ObjRelP::DbiTable;
use vars qw (@ISA);
@ISA = qw (GUS::ObjRelP::DbiTable);

sub setDefaultParams {
  my $self = shift;
  $self->setChildList(
      ['GUS::Model::DoTS::AssemblySequenceSNP','assembly_sequence_id','assembly_sequence_id']);

  $self->setParentList(
      ['GUS::Model::DoTS::Assembly','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::NASequence','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::VirtualSequence','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::ExternalNASequence','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::SplicedNASequence','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::NASequenceImp','na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::Assembly','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::NASequence','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::VirtualSequence','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::ExternalNASequence','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::SplicedNASequence','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::DoTS::NASequenceImp','assembly_na_sequence_id','na_sequence_id'],
      ['GUS::Model::Core::AlgorithmInvocation','row_alg_invocation_id','algorithm_invocation_id'],
      ['GUS::Model::Core::GroupInfo','row_group_id','group_id'],
      ['GUS::Model::Core::UserInfo','row_user_id','user_id'],
      ['GUS::Model::Core::ProjectInfo','row_project_id','project_id']);

  $self->setAttributeNames(
      'assembly_sequence_id',
      'assembly_na_sequence_id',
      'na_sequence_id',
      'sequence_start',
      'sequence_end',
      'quality_start',
      'quality_end',
      'assembly_offset',
      'assembly_strand',
      'gapped_sequence',
      'have_processed',
      'processed_category',
      'modification_date',
      'user_read',
      'user_write',
      'group_read',
      'group_write',
      'other_read',
      'other_write',
      'row_user_id',
      'row_group_id',
      'row_project_id',
      'row_alg_invocation_id');

  $self->setQuotedAtts(
      'modification_date',
      'processed_category',
      'gapped_sequence');

  $self->setAttInfo(
      {'col' => 'assembly_sequence_id', 'type' => 'NUMBER', 'prec' => 10, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'assembly_na_sequence_id', 'type' => 'NUMBER', 'prec' => 10, 'length' => 22, 'Nulls' => 1, 'base_type' => 'not set'}, 
      {'col' => 'na_sequence_id', 'type' => 'NUMBER', 'prec' => 10, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'sequence_start', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'sequence_end', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'quality_start', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 1, 'base_type' => 'not set'}, 
      {'col' => 'quality_end', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 1, 'base_type' => 'not set'}, 
      {'col' => 'assembly_offset', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'assembly_strand', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'gapped_sequence', 'type' => 'CLOB', 'prec' => '', 'length' => 4000, 'Nulls' => 1, 'base_type' => 'not set'}, 
      {'col' => 'have_processed', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'processed_category', 'type' => 'VARCHAR2', 'prec' => '', 'length' => 50, 'Nulls' => 1, 'base_type' => 'not set'}, 
      {'col' => 'modification_date', 'type' => 'DATE', 'prec' => '', 'length' => 7, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'user_read', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'user_write', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'group_read', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'group_write', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'other_read', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'other_write', 'type' => 'NUMBER', 'prec' => 1, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'row_user_id', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'row_group_id', 'type' => 'NUMBER', 'prec' => 4, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'row_project_id', 'type' => 'NUMBER', 'prec' => 4, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'}, 
      {'col' => 'row_alg_invocation_id', 'type' => 'NUMBER', 'prec' => 12, 'length' => 22, 'Nulls' => 0, 'base_type' => 'not set'});

  $self->setRealTableName('GUS::Model::DoTS::AssemblySequence');

  $self->setIsView(0);

  $self->setParentRelations(
      ['GUS::Model::DoTS::NASequenceImp','na_sequence_id','na_sequence_id'], 
      ['GUS::Model::DoTS::NASequenceImp','assembly_na_sequence_id','na_sequence_id'], 
      ['GUS::Model::Core::AlgorithmInvocation','row_alg_invocation_id','algorithm_invocation_id'], 
      ['GUS::Model::Core::GroupInfo','row_group_id','group_id'], 
      ['GUS::Model::Core::UserInfo','row_user_id','user_id'], 
      ['GUS::Model::Core::ProjectInfo','row_project_id','project_id']);

  $self->setChildRelations(
      ['GUS::Model::DoTS::AssemblySequenceSNP','assembly_sequence_id','assembly_sequence_id']);

  $self->addToParentList(['GUS::Model::DoTS::Assembly','assembly_na_sequence_id','na_sequence_id']);
  $self->addToParentList(['GUS::Model::DoTS::ExternalNASequence','na_sequence_id','na_sequence_id']);
  $self->setHasSequence(0);

  $self->setPrimaryKeyList('assembly_sequence_id');

  $self->setTableId(474);

}

1;

