package GUS::Model::DoTS::TranslatedAAFeature_Row;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!

use strict;
use GUS::Model::DoTS::AAFeature;

use vars qw (@ISA);
@ISA = qw (GUS::Model::DoTS::AAFeature);

sub setDefaultParams {
  my ($self) = @_;
  $self->setVersionable(1);
  $self->setUpdateable(1);
}

sub setTranslationStart {
  my($self,$value) = @_;
  $self->set("translation_start",$value);
}

sub getTranslationStart {
    my($self) = @_;
  return $self->get("translation_start");
}

sub setTranslationStop {
  my($self,$value) = @_;
  $self->set("translation_stop",$value);
}

sub getTranslationStop {
    my($self) = @_;
  return $self->get("translation_stop");
}

sub setIsSimple {
  my($self,$value) = @_;
  $self->set("is_simple",$value);
}

sub getIsSimple {
    my($self) = @_;
  return $self->get("is_simple");
}

sub setCodonTable {
  my($self,$value) = @_;
  $self->set("codon_table",$value);
}

sub getCodonTable {
    my($self) = @_;
  return $self->get("codon_table");
}

sub setTranslationScore {
  my($self,$value) = @_;
  $self->set("translation_score",$value);
}

sub getTranslationScore {
    my($self) = @_;
  return $self->get("translation_score");
}

sub setTranslationModel {
  my($self,$value) = @_;
  $self->set("translation_model",$value);
}

sub getTranslationModel {
    my($self) = @_;
  return $self->get("translation_model");
}

sub setNumberOfSegments {
  my($self,$value) = @_;
  $self->set("number_of_segments",$value);
}

sub getNumberOfSegments {
    my($self) = @_;
  return $self->get("number_of_segments");
}

sub setDianaAtgScore {
  my($self,$value) = @_;
  $self->set("diana_atg_score",$value);
}

sub getDianaAtgScore {
    my($self) = @_;
  return $self->get("diana_atg_score");
}

sub setDianaAtgPosition {
  my($self,$value) = @_;
  $self->set("diana_atg_position",$value);
}

sub getDianaAtgPosition {
    my($self) = @_;
  return $self->get("diana_atg_position");
}

sub setPValue {
  my($self,$value) = @_;
  $self->set("p_value",$value);
}

sub getPValue {
    my($self) = @_;
  return $self->get("p_value");
}

sub setParameterValues {
  my($self,$value) = @_;
  $self->set("parameter_values",$value);
}

sub getParameterValues {
    my($self) = @_;
  return $self->get("parameter_values");
}

sub setIsReversed {
  my($self,$value) = @_;
  $self->set("is_reversed",$value);
}

sub getIsReversed {
    my($self) = @_;
  return $self->get("is_reversed");
}

1;
