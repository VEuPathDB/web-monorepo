[GENERAL]
description   = GiardiaDB Protein Sequence Browser
db_adaptor    = DAS::GUS
db_args       = sub {
                 use ApiCommonWebsite::Model::ModelConfig;
                 use ApiCommonWebsite::Model::DbUtils;
                 my $c = new ApiCommonWebsite::Model::ModelConfig('GiardiaDB');
                 my $resolvedDsn = ApiCommonWebsite::Model::DbUtils->resolveOracleDSN($c->appDb->dbiDsn);
                 { -sqlfile => $ENV{DOCUMENT_ROOT}.'/../conf/gbrowse.conf/giardiadbaa.xml',
                   -dsn     => $resolvedDsn,
                     -user    => $c->appDb->login,
                     -pass    => $c->appDb->password,
                   }
                 }

#plugins = AttributeHiliter 
plugins = Aligner FastaDumper GFFDumper BatchDumper

# 'region' or 'contig' would be other typical choices,
reference class  = protein

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
js          = /gbrowse/js
tmpimages   = /gbrowse/tmp
# using full url for tmpimages breaks under mod_perl.  Bio::Graphics::Browser 
# calls lookup_uri() on it.
#tmpimages   = http://giardiadb.org/gbrowse/tmp /var/www/giardiadb.org/html/gbrowse/tmp


# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 2000

show sources = 0
default varying = 1 # tracks appear as defined below, not in alphabetical order

# where to link to when user clicks in detailed view
link        = /$CGI_OR_MOD/gbrowse/giardiadbaa

# what image widths to offer
image widths  = 640 800 1024 1280

# default width of detailed view (pixels)
default width = 800
default features = PfamDomains SignalP TMHMM HydropathyPlot LowComplexity BLASTP

# max and default segment sizes for detailed view
max segment     = 1000000
default segment = 500

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000

# colors of the overview, detailed map and key
overview bgcolor = lavenderblush
detailed bgcolor = thistle
key bgcolor      = mistyrose

# examples to show in the introduction
examples = GL50803_27266
           Kinase
           "Transmembrane Protein"

# "automatic" classes to try when an unqualified identifier is given
automatic classes = protein

language = en

#empty_tracks = dashed

# a footer
footer = <hr>

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = <script language="JavaScript" type="text/javascript" src="/gbrowse/wz_tooltip.js"></script>

init_code = @main::rainbow = qw(red green yellow blue khaki pink orange cyan purple);
            use vars qw($CGI_OR_MOD);
            #$CGI_OR_MOD =  'cgi-bin';
            $CGI_OR_MOD =  'mod-perl';
            # group writable tmp files
            umask 0002; 
            sub hover {
              use HTML::Template;
	      my ($name, $data) = @_;
          my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl');
	      $tmpl->param(DATA => [ map { { @$_ > 1 ? (KEY => $_->[0], VALUE => $_->[1]) : (SINGLE => $_->[0]) } } @$data ]);
	      my $str = $tmpl->output;
	      $str =~ s/'/\\'/g;
	      $str =~ s/\"/&quot;/g;
	      $str =~ s/\s+$//;
	      my $cmd = "this.T_STICKY=false;this.T_TITLE='$name'";
	      $cmd = qq{" onMouseOver="$cmd;return escape('$str')};
	      return $cmd;
	    }

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

###################################
# Plugin configuration
###################################
[MassSpecPeptides]
feature      = domain:MassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/1-d/i) && return 'mediumslateblue';
                     ($extdbname =~ m/mudpit/i) && return 'black';
                     ($extdbname =~ m/rhoptry/i) && return 'cadetblue';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = -1 
description  = 0 
link	=  javascript:void(0)
link_target  = sub {  my $f = shift;
                      my ($desc) = $f->get_tag_values('Description');
                      $desc =~ s/[\r\n]/<br>/g;
		      my ($seq) =  $f->get_tag_values('PepSeq');
                      my @data;
                      push @data, [ '' => "sequence:$seq<br>$desc" ];
                      hover('', \@data);
                   }
label 		 = 0
key          = Mass Spec Peptides (Ratner, et al.)
citation  = <b>Preliminary</b> analysis by Daniel Ratner, et al. 
             Department of Bioengineering, University of Washington, 
             William H. Foege Building, Box 355061, Seattle, WA 98195-5061<br>


[InterproDomains]
feature      = domain:interpro
glyph        = segments
font2color   = black
bgcolor      = sub { my $f = shift;
                     $main::seenPfam{$f->feature_id} ||= $main::rainbow[scalar(keys %main::seenPfam) % scalar(@main::rainbow)]; 
                     return $main::seenPfam{$f->feature_id}; 
                   } 
height       = 8 
description  = 0 
label        = 1 
link_target  = sub { 
                 my $f = shift;
                 my $name = $f->name;
                 my ($desc) = $f->get_tag_values("Note");
                 my ($db) = $f->get_tag_values("Db");
                 my ($evalue) = $f->get_tag_values("Evalue");
								 $evalue = sprintf("%.2E", $evalue);
                 my @data;
                 push @data, [ 'Database:'  => $db ];
                 push @data, [ 'Accession:'  => $name ];
                 push @data, [ 'Description:' => $desc ];
                 push @data, [ 'Coordinates:' => $f->start . ' .. ' . $f->end ];
                 push @data, [ 'Evalue:' => $evalue ];
                 hover("InterPro Domain: $name", \@data);
               }
link         = sub { 
                 my $f = shift;
                 my ($db) = $f->get_tag_values('Db');
                 my ($pi) = $f->get_tag_values('Pi');
                 my $url;
                 if($db eq 'INTERPRO') { 
                   $url = qq|http://www.ebi.ac.uk/interpro/DisplayIproEntry?ac=$pi|;
                 } elsif( $db eq 'PFAM') { 
                   $url = qq|http://pfam.sanger.ac.uk/family?acc=$pi|;
                 } elsif( $db eq 'PRINTS') {
                   $url = qq|http://umber.sbs.man.ac.uk/cgi-bin/dbbrowser/sprint/searchprintss.cgi?prints_accn=$pi&display_opts=Prints&category=None&queryform=false&regexpr=off|;
                 } elsif( $db eq 'PRODOM') {
                   $url = qq|http://prodom.prabi.fr/prodom/current/cgi-bin/request.pl?question=DBEN&query=$pi|;
                 } elsif( $db eq 'PROFILE') {
                   $url = qq|http://www.expasy.org/prosite/$pi|;
                 } elsif( $db eq 'SMART') {
                   $url = qq|http://smart.embl-heidelberg.de/smart/do_annotation.pl?ACC=$pi&BLAST=DUMMY|; 
                 } elsif( $db eq 'SUPERFAMILY') { 
                   $url = qq|http://supfam.org/SUPERFAMILY/cgi-bin/scop.cgi?ipid=$pi|;
                 } else {
                   $url = qq|http://www.ebi.ac.uk/interpro/ISearch?query=$pi&mode=all|;
                 }
                 return $url;
               }
key          = Interpro Domains 
citation     = Interpro: PFam, PIR, Prints, Prodom, Smart, Superfamily, TIGRFAM, Prosite

[SignalP]
feature      = domain:SignalP
glyph        = segments
font2color   = black
bgcolor      = dodgerblue
height       = 10
label        = 0
link         = 0
description  = 0
key          = Signal Peptide
citation     = Signal peptide predictions by SP-HMM/SP-NN

[TMHMM]
feature      = domain:TMHMM
glyph        = segments
font2color   = black
bgcolor      = lightsteelblue
height       = 10 
link_target        = sub { my $f = shift;
		             my $name = $f->name;
		             my ($desc) = $f->get_tag_values("Topology");
		             my @data;
		             push @data, [ 'Name:'  => $name ];
		             push @data, [ 'Topology:' => $desc ];
		             hover("Transmembrane Domain", \@data);
	               }
label        = 0
link         = 0
description  = 0
key          = Transmembrane Domains
citation     = Transmembrane domains detected by TmHMM

[HydropathyPlot]
glyph        = protein
global feature = 1
height       = 40
do_kd        = 1
fgcolor      = red
axis_color   = blue
link         = 0
key          = Kyte-Doolittle Hydropathy Plot
citation     = Kyte-Doolittle hydropathy plot

[BLASTP]
feature      = match:BLASTP
glyph        = graded_segments
font2color   = black
bgcolor      = red
height       = 8
stranded     = 1
link_target        = sub { my $f = shift;
		             my $name = $f->name;
		             my ($desc) = $f->get_tag_values("Note");
					 my ($idnt) = $f->get_tag_values("PercentIdentity"); 
					 my ($evalue) = $f->get_tag_values("Expect");
					 my ($pos) = $f->get_tag_values("PercentPositive");
		             my @data;
		             push @data, [ 'Name:'        => $name ];
		             push @data, [ 'Description:' => $desc ];
		             push @data, [ 'Expectation:' => $evalue ];
		             push @data, [ '% Identity:' => $idnt ];
		             push @data, [ '% Positive:'  => $pos ];
		             hover("WU_BLASTP: $name", \@data);
	       }
description  = 1
label        = 0
link         = http://ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val=$name
key          = BLASTP Hits
citation     = BLASTP Hits

[LowComplexity]
feature      = lowcomplexity:seg
glyph        = segments
bgcolor      = grey
height       = 6
title        = sub {
                 my $f = shift;
		 my @data;
                 my ($sequence) = $f->get_tag_values("Sequence");
                 push @data, [ 'Coordinates:' => $f->start . '..' . $f->end ];
		 push @data, [ 'Sequence:'  => $sequence ];
		 hover("Low complexity", \@data);
	       }
description  = 0
label        = 0
link         = ""
key          = Low Complexity Regions
citation     = Regions of low sequence complexity, as defined by the
               <code>seg</code> algorithm
