[GENERAL]
header        = <table><tr><td width="160" align="center" valign="middle"><a href="/" title='ToxoDB Home'><img border="0" src="/toxo/images/toxodb_logo-rotated.jpg" ></a><br><a href="/">ToxoDB Home</a></td><td align="center" valign="middle"><font size="+3" color="darkblue">ToxoDB Genome Browser</font></td></tr></table>
description   = ToxoDB
db_adaptor    = DAS::GUS
db_args       = sub {
    use ApiCommonWebsite::Model::ModelConfig;
    use ApiCommonWebsite::Model::DbUtils;
    my $c = new ApiCommonWebsite::Model::ModelConfig('ToxoDB');
    my $resolvedDsn = ApiCommonWebsite::Model::DbUtils->resolveOracleDSN($c->appDb->dbiDsn);
    { -sqlfile => $ENV{DOCUMENT_ROOT}.'/../conf/gbrowse.conf/toxodb.xml',
        -dsn     => $resolvedDsn,
        -user    => $c->appDb->login,
        -pass    => $c->appDb->password,
    }
  }

plugins = Aligner RestrictionAnnotator FastaDumper GFFDumper BatchDumper

request timeout = 300

# 'region' or 'contig' would be other typical choices,
reference class  = chromosome

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
js          = /gbrowse/js

# using full url breaks under mod_perl.  Bio::Graphics::Browser calls lookup_uri()
# on it. That is, don't do this:
#tmpimages   = http://toxodb.org/gbrowse/tmp /var/www/toxo.org/html/gbrowse/tmp 
tmpimages   = /gbrowse/tmp

# advanced features
balloon tips    = 1
#drag and drop = 1

# one hour
cache time    = 1

# popup balloon configuration
# 'balloon' is the default
#custom balloons = [balloon]
#           images    = /gbrowse/images/balloons
#           delayTime = 500
#           maxWidth  = 660
#           maxHeight = 200 
#
#           [balloon265]
#           images    = /gbrowse/images/balloons
#           maxWidth  = 465
#           delayTime = 100

# 24hrs/day * 360 days
image cachetime   = 8760

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 2000

show sources = 0
default varying = 1 # tracks appear as defined below, not in alphabetical order

# where to link to when user clicks in detailed view
link        = /cgi-bin/gbrowse/toxodb

# what image widths to offer
image widths  = 640 800 1024 1280

truecolor = 1

# default width of detailed view (pixels)
default width = 800
default features = annotation:density
    SNP:density
    AnnotatedGenes

# max and default segment sizes for detailed view
max segment     = 10000000
default segment = 50000

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000 20000 30000 40000 60000 100000 200000 500000 1000000 2000000 4000000

# colors of the overview, detailed map and key
overview bgcolor = lavenderblush
detailed bgcolor = thistle
key bgcolor      = mistyrose

# examples to show in the introduction
examples = TGME49_chrVI:435135..475134
           DS984741:730139..770138
           55.m05020

# "automatic" classes to try when an unqualified identifier is given
automatic classes = gene

language = en

# empty_tracks = suppress

# a footer
footer = sub { return qq(<hr><!--#include virtual='/a/footer.jsp' -->); }

# Various places where you can insert your own HTML -- see configuration docs
html1 =<p>Click here for <a target="citation" href="/cgi-bin/gbrowse/toxodb/?help=citations"><b>Track Descriptions & Citations</b></a>
html2 =<p><font color='red'><b>NOTE</b></font>
 <a href="http://ancillary.toxodb.org/cgi-bin/gbrowse/ancillary/" target='new'> 
 <b>Ancillary GBrowse Site for <i>T. gondii</i></b></a>, with additional data sets, including Affymetrix probesets.<br> To view the same region, simply cut and paste the 'Landmark or Region' coordinates from this page to the 'Landmark or Region' box on the Ancillary GBrowse page.</p>
html3 = <script type="text/javascript" src="/gbrowse/apiGBrowsePopups.js"></script>
html4 = <script type='text/javascript' src='/a/js/newwindow.js'></script>
html5 = <p><font color='red'><b>NOTE</b></font>
 <a href="http://ancillary.toxodb.org/cgi-bin/gbrowse/ancillary/" target='new'> 
 <b>Ancillary GBrowse Site for <i>T. gondii</i></b></a>, with Affymetrix probesets and more.<br> To view the same region, simply cut and paste the 'Landmark or Region' coordinates from this page to the 'Landmark or Region' box on the Ancillary GBrowse page.</p>
html6 = <script type="text/javascript" src="/gbrowse/wz_tooltip.js"></script>

init_code = sub hover {
              use HTML::Template;
        my ($name, $data) = @_;
        my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl');
        $tmpl->param(DATA => [ map { { @$_ > 1 ? (KEY => $_->[0], VALUE => $_->[1]) : (SINGLE => $_->[0]) } } @$data ]);
        my $str = $tmpl->output;
        $str =~ s/'/\\'/g;
        $str =~ s/\"/&quot;/g;
        $str =~ s/\s+$//;
        my $cmd = "this.T_STICKY=false;this.T_TITLE='$name'";
        $cmd = qq{" onMouseOver="$cmd;return escape('$str')};
        return $cmd;
      }
      sub hover2 {
           use HTML::Template;
           my ($name, $data) = @_;
           my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl');
           $tmpl->param(DATA => [ map { { Key => $_->[0], Value => $_->[1], } } @$data ]);
           my $str = $tmpl->output;
           return $str;
        }
 sub snpTitle {
  my $f = shift;
  my %rev = ( A => 'T', T => 'A', C => 'G', G => 'C' );
  my ($isCoding) = $f->get_tag_values("IsCoding"); 
  my ($posInCDS) = $f->get_tag_values("PositionInCDS"); 
  my ($posInProtein) = $f->get_tag_values("PositionInProtein"); 
  my ($refStrain) = $f->get_tag_values("RefStrain"); 
  my ($refAA) = $f->get_tag_values("RefAA"); 
  my ($gene) = $f->get_tag_values("Gene"); 
  my ($reversed) = $f->get_tag_values("Reversed"); 
  my ($refNA) = $f->get_tag_values("RefNA"); 
  $refNA = $rev{$refNA} if $reversed;
  my ($nonSyn) = $f->get_tag_values("NonSyn"); 
  my $variants = $f->bulkAttributes();
  my ($source_id) = $f->get_tag_values("SourceID"); 
  my $class = 'Non-Coding';
  my ($rend) = $f->get_tag_values("rend"); 
  my ($base_start) = $f->get_tag_values("base_start");
  my $zoom_level = $rend - $base_start; 
  if ($isCoding) {
     my $non = $nonSyn? 'non-' : '';
     $class = "Coding (${non}synonymous)";
  }
  if ($zoom_level <= 60000) {
    my @data;
    my $link = qq(<a href=/toxo/showRecord.do?name=SnpRecordClasses.SnpRecordClass&primary_key=$source_id>$source_id</a>);
    push @data, [ 'SNP'  => $link ];
    push @data, [ 'Location:'  => $f->start ];
    if ($gene) {
       push @data, [ 'Gene:'  => $gene ]; 
    }
    if ($isCoding) {
       $refAA = "&nbsp;&nbsp;&nbsp;&nbsp;AA=$refAA"; 
       push @data, [ 'Position in CDS:'  => $posInCDS ];
       push @data, [ 'Position in Protein:'  => $posInProtein ];
    }
    push @data, [ 'Class:'  => $class ];
    push @data, ["$refStrain (reference)"=>"NA=$refNA$refAA"];
    foreach my $variant (@$variants) {
      my $strain = $variant->{STRAIN};
      my $na = $variant->{ALLELE};
      $na = $rev{$na} if $reversed;
      my $aa = $variant->{PRODUCT};
      my $info = "NA=$na" . ($isCoding? "&nbsp;&nbsp;&nbsp;&nbsp;AA=$aa" : "");
      push @data, [ "$strain" => $info ];
    }
    return hover( "SNP", \@data) if $refStrain;
  } else {
    return $gene? "In gene $gene" : "Non-coding"; 
  }
 }
 sub snpTitleQuick {
   my $f = shift;
   my $webapp = 'toxo';
   my ($gene) = $f->get_tag_values("Gene"); 
   my ($isCoding) = $f->get_tag_values("IsCoding"); 
   my ($nonSyn) = $f->get_tag_values("NonSyn"); 
   my ($rend) = $f->get_tag_values("rend"); 
   my ($base_start) = $f->get_tag_values("base_start");
   my $zoom_level = $rend - $base_start; 
   if ($zoom_level <= 60000) {
     my ($params) = $f->get_tag_values("params");
     my $variants = $f->bulkAttributes();
     my @vars;
     foreach my $variant (@$variants) {
       push(@vars, "$variant->{STRAIN}:$variant->{ALLELE}:$variant->{PRODUCT}");
     }
     my $varsString = join('|', @vars);
     my $start = $f->start();
     return qq{" onmouseover="return escape(pst(this,'$params&$varsString&$start&$gene&$isCoding&$nonSyn&$webapp'))"};
   } else {
     return $gene? "In gene $gene" : "Intergenic"; 
   }
 }
 sub synSpanTitle {
     my $f = shift;
     my $name = $f->name;
     my $chr = $f->seq_id;
     my $loc = $f->location->to_FTstring;
     my $strand = $f->strand == 1? "no" : "yes";
     my ($refStart) = $f->get_tag_values("RefStart");
     my ($refEnd) = $f->get_tag_values("RefEnd");
     my ($refLength) = $refEnd - $refStart;
     my ($synStart) = $f->get_tag_values("SynStart");
     my ($synEnd) = $f->get_tag_values("SynEnd");
     my ($synLength) = $synEnd - $synStart;
     my ($contigLength) = $f->get_tag_values("ContigLength");
     my ($refContigLength) = $f->get_tag_values("RefContigLength");
     my ($contigSourceId) = $f->get_tag_values("Contig");
     my ($type) = $f->get_tag_values("Type");
     my @data;
     if ($type !~ /gap/i) {
       push @data, [ 'Syntenic Contig: ' => "$contigSourceId" ];
       push @data, [ 'Ref location: ' => "$refStart&nbsp;-&nbsp;$refEnd ($refLength&nbsp;bp)" ];
       push @data, [ 'Syn location: ' => "$synStart&nbsp;-&nbsp;$synEnd ($synLength&nbsp;bp)" ];
       push @data, [ 'Reversed: ' => "$strand" ];
       push @data, [ 'Total Syn Contig Length: ' => "$contigLength" ];
       push @data, [ 'Total Ref Contig Length: ' => "$refContigLength" ];
       hover("Synteny Span", \@data);
     } else { 
       my @gaps = $f->sub_SeqFeature();
       my $count = 0;
       my %seen;
       foreach(@gaps) {
         my $gstart = int($_->start);
         next if(exists $seen{$gstart});
         $seen{$gstart} = 1;
         $count++;
         my $gstop  = int($_->stop);
         my $gsize  = $gstop - $gstart + 1;
         push @data, [ "Gap $count: $gstart..$gstop"  => $gsize ]; 
       }
     }
     hover( ($type =~ /gap/i) ? 'All gaps in region' : 'Scaffold', \@data);
 }
 sub synSpanScale {
     my $f = shift;
     my ($type) = $f->get_tag_values('Type');
     return 0 if ($type =~ /gap/i);
     my $name = $f->name;
     my ($scale) = $f->get_tag_values("Scale");
     $scale = sprintf("%.2f", $scale);
     return $name; 
 }
 sub synSpanLink {
     my $f = shift;
     my $name = $f->name;
     return "/toxo/showRecord.do?name=SequenceRecordClasses.SequenceRecordClass&primary_key=$name"
 }
 sub synGeneTitle {
                 my $f = shift;
     my $name = $f->name;
     my $chr = $f->seq_id;
     my $loc = $f->location->to_FTstring;
     my ($desc) = $f->get_tag_values("Note");
     my ($taxon) = $f->get_tag_values("Taxon");
     my ($isPseudo) = $f->get_tag_values("IsPseudo");
     my ($contig) = $f->get_tag_values("Contig");
     my ($soTerm) = $f->get_tag_values("SOTerm");
     my ($start) = $f->get_tag_values("Start");
     my ($end) = $f->get_tag_values("End");
           $soTerm =~ s/\_/ /g;
           $soTerm =~ s/\b(\w)/\U$1/g;
     my @data;
     push @data, [ 'Species:' => $taxon ];  
     push @data, [ 'Name:'  => $name ];
     push @data, [ 'Gene Type:' => ($isPseudo ? "Pseudogenic " : "") . $soTerm  ];
     push @data, [ 'Description:' => $desc ];
     push @data, [ 'Location:'  => "$contig: $start - $end" ];
     hover("Syntenic Gene: $name", \@data);
         }
 sub snpHeight {
   my $f = shift;
   my ($rend) = $f->get_tag_values("rend"); 
   my ($base_start) = $f->get_tag_values("base_start");
   my $zoom_level = $rend - $base_start; 
   return $zoom_level <= 60000? 10 : 6;
 }
 sub oldChipColor { 
    my $f   = shift;
    my ($a) = $f->get_tag_values('Analysis');
    return '#00C896' if($a =~ /H3K4(.*) - Rep1/);
    return '#00C800' if($a =~ /H3K4(.*) - Rep2/);
    return '#FA9600' if($a =~ /H3K9(.*) - Rep1/);
    return '#C86400' if($a =~ /H3K9(.*) - Rep2/);
 } 
 sub chipColor { 
    my $f   = shift;
    my ($a) = $f->get_tag_values('Antibody');
    my ($r) = $f->get_tag_values('Rep');
    return '#00C800' if($a =~ /H3K4/ && $r == 1);
    return '#00C896' if($a =~ /H3K4/ && $r == 2);
    return '#C86400' if($a =~ /H3K9/ && $r == 1);
    return '#FA9600' if($a =~ /H3K9/ && $r == 2);
 } 
 sub peakTitle {
    my $f  = shift;
    my $name = $f->name;
    my $score = $f->score;
    my ($analysis) = $f->get_tag_values("Analysis");
    my @data;
    push @data, [ 'Probe Id:' => $name ];
    push @data, [ 'Analysis:' => $analysis ];
    push @data, [ 'Score:' => $score ];
    hover( "ChIP-chip called peaks $name", \@data); 
  }
 sub peakHeight {
   my $f = shift;
   my $score = $f->score;
   return $score; 
 }
 sub changeType { 
   my $f = shift;
   my ($type) = $f->get_tag_values("Type");
   return "arrow" if($type eq 'scaffold');
   return "segments";
 }
 sub gapFgcolor { 
   my $f = shift; 
   my ($type) = $f->get_tag_values("Type");
   if ($type eq "fgap") {
     return "white";
   } else {
     my $orient = $f->strand;
     if ($orient eq "+1") {
       return "orange";
     } elsif ($orient eq "-1") {
       return "darkseagreen";
     } else {
       return "red";
     }
   }
  } 
  sub gapBgcolor { 
    my $f = shift;
    my ($type) = $f->get_tag_values("Type");
    return "white" if ($type eq "fgap");
    return "red" if ($type eq "sgap");
  }

postgrid = sub { use DAS::Util::SynView; 
                 return DAS::Util::SynView::postgrid(@_);
           } 

# Advanced feature: an example of callbacks to be run remotely
# by gbrowse_details for AJAX/iframe balloons
#[TOOLTIPS]
#chip = sub {  my $args  = shift;
#              my $f  = $args->{feature};
#              my $name = $f->name;
#              my $score = $f->score;
#              my ($analysis) = $f->get_tag_values("Analysis");
#              my @data;
#              push @data, [ 'Probe Id:' => $name ];
#              push @data, [ 'Analysis:' => $analysis ];
#              push @data, [ 'Score:' => $score ];
#              hover2( "$name", \@data);
#      }


### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

###################################
# Plugin configuration
###################################

[Scaffolds:overview]
feature      = scaffold:TIGR
glyph        = \&changeType
label        = 0
description  = 0
direction    = strand
tick         = 2
ruler        = 1
linewidth    = 2
height       = 10
arrowstyle   = regular
connector_color = white
relative_coords = 1
fgcolor      = \&gapFgcolor
linewidth    = 2
height       = 10
key          = Scaffolds
citation =<b>Scaffolds and gaps displayed on the entire chromosome.</b> <br> <i>Forward scaffolds are in orange, reverse ones in green and gaps are in red.</i><br><br> All scaffold assemblies were generated by <a target='new' href="http://www.tigr.org/tdb/e2k1/tga1/seq.shtml">TIGR</a>. Briefly, contigs assembled from approximately 10x whole-genome "double-barrel" shotgun sequencing reads of 2 kb and 10 kb plasmid inserts were further assembled into scaffolds based on 8,000 end-reads from larger (80-100 kb) BAC inserts. <p>The order and orientation of the scaffolds in each chromosome was determined based on the unique locations of both <a href="#GeneticMarkers:overview">genetically linked markers</a> and <a href="#BACEnds">paired BAC end reads</a>. Note that scaffolds with undetermined orientation are shown by default in the forward orientation (orange).

[GeneticMarkers:overview]
feature      = GeneticMarkers:overview
glyph        = diamond
description  = 0
label        = 0
fgcolor      = darkslateblue
bgcolor      = darkslateblue
key          = Genetic Markers
label density = 50
citation = <b>Genetic markers displayed on the entire chromosome.</b> <br><br> PCR/RFLP markers were developed and used to generate a
  chromosomal linkage map based on two independent crosses (type II x
  III and I x III strains).  More information is available at <a target='new'
  href="http://www.toxomap.wustl.edu/">www.toxomap.wustl.edu</a>.
  See <A href="/toxo/showXmlDataContent.do?name=XmlQuestions.DataSources&datasets=GeneticMarkers_Sibley&title=Genetic%20Markers">Data Sources</a> for details. 


[SNP:overview]
feature      = SNP:density
glyph        = xyplot
graph_type   = boxes
bump density = 1
scale        = right
#scale       = both
bgcolor      = lightslategray
fgcolor      = bgcolor
height       = 60
min_score    = 0
label        = 0
key          = SNP Density
citation     = <b>Single nucleotide polymorphism (SNPs) density displayed on the entire chromosome.</b><br><br> SNPs were calculated by counting the number of SNPs in 50,000 base pair (50Kb) intervals. So each bar represents the number of SNPs (y axis = number of SNPs) in that 50Kb region of the chromosome.

[Annotation:overview]
feature      = annotation:density
glyph        = xyplot
graph_type   = boxes
bump density = 1
scale        = right
#scale       = both
bgcolor      = lightslategray
fgcolor      = bgcolor
height       = 60
min_score    = 0
label        = 0
key          = Gene Density
citation     = <b>Density plot of annotated genes displayed on the entire chromosome.</b> <br><br> This was caluclated by counting the number of genes in 50,000 base pair (50Kb) intervals. So each bar represents the number of genes (y axis = number of genes) in that 50Kb region of the chromosome.

[Scaffolds]
feature      = scaffold:TIGR
category     = Analysis
glyph        = \&changeType
label        = sub { my $f = shift;
                     my ($type) = $f->get_tag_values("Type");
                     return 1 if($type eq 'scaffold');
                     return 0;
               }
description  = 0
tick         = 2
direction    = strand
ruler        = 1
linewidth    = 2
height       = 10
arrowstyle   = regular
relative_coords = 1
connector_color = white
bgcolor   = \&gapBgcolor
fgcolor   = \&gapFgcolor
title     = sub { my $f = shift;
                  my $name = $f->name;
                  my $chr  = $f->seq_id;
                  my $loc  = $f->location->to_FTstring;
                  my $orient   = $f->strand eq '-1' ? "reverse" : "forward";
                  my ($length) = $f->get_tag_values("Length");
                  my ($type) = $f->get_tag_values("Type");
                  my $start = $f->start;
                  my $stop = $f->stop;
                  my @data;
                  if($type eq "fgap"){
                    my @gaps = $f->sub_SeqFeature();
                    my $count = 0;
                    foreach(@gaps) {
                      $count++;
                      my $gstart = $_->start;
                      my $gstop  = $_->stop;
                      my $gsize  = $gstop - $gstart + 1;
                      push @data, [ "Gap $count: $gstart..$gstop:"  => $gsize ]; 
                    }
                  } elsif($type eq "scaffold") {
                    push @data, [ 'Name:'    => $name ]; 
                    push @data, [ 'Length:'  => $length ];
                    push @data, [ 'Orientation:' => "$orient" ]; 
                    push @data, [ 'Location:' => "$start..$stop" ];
                  } 
                  hover( ($type eq 'scaffold') ? 'Scaffold' : 'All gaps in region', \@data);
              }
key       = Scaffolds in Current View
citation  = <b>Scaffold(s) and gaps in current view.</b> <br><i>Forward scaffolds are in orange, reverse ones in green and gaps are in red </i>. <br><br> All scaffold assemblies were generated by <a target='new' href="http://www.tigr.org/tdb/e2k1/tga1/seq.shtml">TIGR</a>. Briefly, contigs assembled from approximately 10x whole-genome "double-barrel" shotgun sequencing reads of 2 kb and 10 kb plasmid inserts were further assembled into scaffolds based on 8,000 end-reads from larger (80-100 kb) BAC inserts. <p>The order and orientation of the scaffolds in each chromosome was determined based on the unique locations of both <a href="#GeneticMarkers:overview">genetically linked markers</a> and <a href="#BACEnds">paired BAC end reads</a>. Note that scaffolds with undetermined orientation are shown by default in the forward orientation (orange).

[AnnotatedGenes]
feature      = gene:annotation
category     = 1. Gene Models
glyph        = processed_transcript
strand       = 1
require_subparts = 1
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "blue" : "red";
               }
font2color   = darkgrey
height       = 8
# we set title = 1 and use link_target instead as a trick to force gbrowse to exlude the alt= href text
title = 1
link_target        = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
label        = 1
#description  = 1
link         = /toxo/showRecord.do?name=GeneRecordClasses.GeneRecordClass&primary_key=$name
key          = Annotated Genes 
citation     = Structural and functional gene annotation provided by the
               sequencing centers.

[Version4Genes]
feature      = oldgene:annotation
category     =1. Gene Models
glyph        = processed_transcript
require_subparts = 1
tkcolor       = #CCCCFF
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "lightblue" : "pink";
               }
font2color   = darkgrey
height       = 8
# we set title = 1 and use link_target instead as a trick to force gbrowse to exlude the alt= href text
title        = 1
link_target        = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
label        = 1
description  = 1
link         = http://toxodb.org/toxo/showRecord.do?name=GeneRecordClasses.GeneRecordClass&project_id=ToxoDB&primary_key=$name
key          = Toxo Version 4 Annotated Genes 
citation     = Previous ToxoDB version 4 Structural and functional gene annotation. This annotation is also sometimes referred to as the Draft 3 annotation.



#[AnnotatedGenes:200000]
#feature      = annotation:density
#glyph        = xyplot
#graph_type   = boxes
#bump density = 1
#bgcolor      = lightslategray
#fgcolor      = bgcolor
#height       = 60
#min_score    = 0

[SyntenySpanGT1]
feature      = match:syntenySpanMC
preset       = Synteny
category     = 6. Syntenic Regions
glyph        = \&changeType
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii GT1/;
                }
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale");}
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 10 
title        = 1
connector_color = white
fgcolor      = \&gapFgcolor
bgcolor      = \&gapBgcolor
label        = \&synSpanScale;
link_target  = \&synSpanTitle
link         = \&synSpanLink
key          = GT1 Syntenic Sequences
citation     = Stretches of likely chromosomal synteny to <i>Toxoplasma gondii</i> GT1.

[SyntenyGT1]
feature      = gene:syntenyMC
preset       = Synteny
category     = 5. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii GT1/;
                }
#description  = 1
label        = 1
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 10 
title = 1
link_target = \&synGeneTitle
link        = /gene/$name
key         = GT1 Syntenic Genes
citation    = <i>T. gondii</i> (GT1) predicted genes found within syntenic spans.

[SyntenySpanME49]
feature      = match:syntenySpanMC
preset       = Synteny
category     = 6. Syntenic Regions
glyph        = \&changeType
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii ME49/;
                }
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale");}
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 10 
title        = 1
connector_color = white
fgcolor      = \&gapFgcolor
bgcolor      = \&gapBgcolor
label        = \&synSpanScale;
link_target  = \&synSpanTitle
link         = \&synSpanLink
key          = ME49 Syntenic Sequences
citation     = Stretches of likely chromosomal synteny to <i>Toxoplasma gondii</i> ME49.

[SyntenyME49]
feature      = gene:syntenyMC
preset       = Synteny
category     = 5. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii ME49/;
                }
#description  = 1
label        = 1
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "blue" : "red";
               }
height       = 10 
title        = 1
link_target = \&synGeneTitle
link        = /gene/$name
key         = ME49 Syntenic Genes
citation    = <i>T. gondii</i> (ME49) predicted genes found within syntenic spans.

[SyntenySpanVEG]
feature      = match:syntenySpanMC
preset       = Synteny
category     = 6. Syntenic Regions
glyph        = \&changeType
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii VEG/;
                }
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale");}
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 10 
title        = 1
connector_color = white
fgcolor      = \&gapFgcolor
bgcolor      = \&gapBgcolor
label        = \&synSpanScale;
link_target  = \&synSpanTitle
link         = \&synSpanLink
key          = VEG Syntenic Sequences
citation     = Stretches of likely chromosomal synteny to <i>Toxoplasma gondii</i> VEG.

[SyntenyVEG]
feature      = gene:syntenyMC
preset       = Synteny
category     = 5. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Toxoplasma gondii VEG/;
                }
#description  = 1
label        = 1
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "blue" : "red";
               }
height       = 10 
title = 1
link_target = \&synGeneTitle
link        = /gene/$name
key         = VEG Syntenic Genes
citation    = <i>T. gondii</i> (VEG) predicted genes found within syntenic spans.

[SyntenySpanNeospora]
feature      = match:syntenySpanMC
preset       = Synteny
category     = 6. Syntenic Regions
glyph        = \&changeType
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Neospora caninum/;
                }
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale");}
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 10 
title        = 1
connector_color = white
fgcolor      = \&gapFgcolor
bgcolor      = \&gapBgcolor
label        = \&synSpanScale;
link_target  = \&synSpanTitle
link         = \&synSpanLink
key          = Neospora Syntenic Sequences
citation     = Stretches of likely chromosomal synteny to <i>Neospora caninum</i>.

[SyntenyNeospora]
feature      = gene:syntenyMC
preset       = Synteny
category     = 5. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Neospora caninum/;
                }
#description = 1
label        = 1
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "blue" : "red";
               }
height       = 10 
title        = 1
link_target  = \&synGeneTitle
link         = /gene/$name
key          = Neospora Syntenic Genes
citation     = <i>N. caninum</i> predicted genes found within syntenic spans.


[GLEANGeneModels]
feature       = GLEAN:annotation
category     = 1. Gene Models
glyph        = processed_transcript
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "lightblue" : "pink";
               }
font2color   = darkgrey
height       = 8
title = 1
link_target     = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
link = javascript:void(0)
description  = 1
label        = 1
key    = GLEAN Gene Models
citation = GLEAN is an automated  gene predictor that integrates different evidence of gene structure to produce a consensus gene. For more informtaion click <a href="http://www.ncbi.nlm.nih.gov/pubmed/17241472">here</a> or to download GLEAN click <a href="http://sourceforge.net/projects/glean-gene/">here</a>.

[TwinScanPredictions]
feature      = TwinScan:annotation
category     = 1. Gene Models
glyph        = processed_transcript
#glyph       = cds
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "lightblue" : "pink";
               }
font2color   = darkgrey
height       = 8
title        = 1
link_target        = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
link = javascript:void(0)
description  = 1
label        = 1
key          = TwinScan Gene Models
citation = <a target='new' href="http://genes.cs.wustl.edu">TwinScan</a> (version
  2) was trained against 330+ <a href="#Draft-3-Annotation">manually
  curated genes</a>.  No informant sequence was used.


[GlimmerHMMPredictions]
feature      = GlimmerHMM:annotation
category     = 1. Gene Models
glyph        = processed_transcript
#glyph       = cds
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "lightblue" : "pink";
               }
font2color   = darkgrey
height       = 8
title        = 1
link_target  = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
link = javascript:void(0)
description  = 1
label        = 1
key          = GlimmerHMM Gene Models
citation = <a target='new' href="http://cbcb.umd.edu/software/pirate/">GlimmerHMM</a> was
  trained against 330+ <a href="#Draft-3-Annotation">manually curated
  genes</a>.


[TigrScanPredictions]
feature      = TigrScan:annotation
category     = 1. Gene Models
glyph        = processed_transcript
#glyph       = cds
bgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "lightblue" : "pink";
               }
font2color   = darkgrey
height       = 8
title        = 1
link_target  = sub {
   my $f = shift;
   my $sourceId = $f->name;
   my $chr = $f->seq_id;
   my $loc = $f->location->to_FTstring;
   my ($soTerm) = $f->get_tag_values("soTerm");
   my ($product) = $f->get_tag_values("product");
   my ($taxon) = $f->get_tag_values("taxon");
   my ($isPseudo) = $f->get_tag_values("isPseudo");
   $soTerm =~ s/\_/ /g;
   $soTerm =~ s/\b(\w)/\U$1/g;
   return qq{" onmouseover="return escape(gene_title(this,'ToxoDB','$sourceId','$chr','$loc','$soTerm','$product','$taxon','$isPseudo'))"};
  }
link = javascript:void(0)
description  = 1
label        = 1
key          = TigrScan Gene Models
citation     = <a target='new' href="http://cbcb.umd.edu/software/pirate/">TigrScan</a>
  was trained for <i>T. gondii</i> by TIGR; the parameters are
  available <a target='new'  href="http://cbcb.umd.edu/software/pirate/tigrscan-toxoplasma.tar.gz">here</a>.

[DoTSAssemblies]
feature      = alignment:DoTSAssemblies
category     = 4. Transcript Expression Evidence
glyph        = graded_segments
bgcolor      = sub { my ($f, undef, undef, undef, $glyph) = @_;
                     my $flip = $glyph->{flip};
                     $f->strand == ($flip ? -1 : 1) ? "navy" : "maroon";
                }
description  = 0
height       = 8
title        = sub { my $f = shift;
                     my $name  = $f->name; 
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my @data; 
                     my ($percent_identity) = $f->get_tag_values("PercentIdentity");
                     my ($count) = $f->get_tag_values("Count");
                     push @data, [ 'Name:' => $name ]; 
                     push @data, [ 'Start:'  => $start ];
                     push @data, [ 'Stop:'   => $stop ];
                     push @data, [ 'Percent Identity:' => $percent_identity ]; 
                     push @data, [ 'Count of ESTs:' => $count ]; 
                     hover("DoTS EST Assemblies: $name", \@data);
               }
link        = sub { my $f = shift;
                    my $name = $f->name;
                    my $link = "/toxo/showRecord.do?name=AssemblyRecordClasses.AssemblyRecordClass&project_id=&primary_key=$name";
                    return $link;
               }
glyph        = graded_segments
strand_arrow = 0
bump_limit   = 50
key          = DoTS EST Assemblies
citation     =  DoTS stands for The Database of Transcribed Sequences. The naming of this feature as "DoTS EST Assemblies" is for historical reasons only. This track shows <a href="http://www.ncbi.nlm.nih.gov/pubmed/11932250">BLAT</a> alignment of consensus transcript sequences (DTs) to the genome. DTs are generated by clustering ESTs based on BLAT alignment to the genome followed by <a href="http://www.ncbi.nlm.nih.gov/pubmed/10508846"> CAP4</a> assembly.

[EST]
feature      = alignment:dbEST
category     = 4. Transcript Expression Evidence
glyph        = segments
bgcolor      = sub { my ($f, undef, undef, undef, $glyph) = @_;
                     my $flip = $glyph->{flip};
                     $f->strand == ($flip ? -1 : 1) ? "navy" : "maroon";
                }
description  = 0
height       = 8
title        = sub { my $f = shift;
                 my $name  = $f->name; 
                 my $start = $f->start;
                 my $stop  = $f->stop;
                 my @data; 
                 my ($percent_identity) = $f->get_tag_values("PercentIdentity");
                 my ($primer) = $f->get_tag_values("Primer");
                 my ($library) = $f->get_tag_values("Library");
                 my ($vector) = $f->get_tag_values("Vector");
                 my ($stage) = $f->get_tag_values("Stage");
                 push @data, [ 'Name:' => $name ]; 
                 push @data, [ 'Start:'  => $start ];
                 push @data, [ 'Stop:'   => $stop ];
                 push @data, [ 'Percent Identity:' => $percent_identity ]; 
                 push @data, [ 'Library:' => $library ]; 
                 push @data, [ 'Vector:' => $vector ]; 
                 push @data, [ 'Primer:' => $primer ]; 
                 push @data, [ 'Stage:' => $stage ]; 
                 hover("dbEST Alignment: $name", \@data);
               }
link         = /toxo/showRecord.do?name=EstRecordClasses.EstRecordClass&id=$name";
glyph        = graded_segments
strand_arrow = 0
bump_limit   = 50
key          = EST Alignments
citation     = Expressed sequence tags (ESTs) were obtained from <a href="http://www.ncbi.nlm.nih.gov/dbEST/">dbEST</a> and aligned to <i>T. gondii</i> chromosomes.
[Cosmids]
feature      = alignment:Cosmids
category     = Analysis
glyph        = segments
bgcolor      = navy
description  = 0
height       = 6
title        = sub { my $f = shift;
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my $length = $stop - $start;
                     my $cname = $f->name;
                     my @data; 
                     push @data, [ 'Clone Size:'     => $length ]; 
                     push @data, [ 'Clone Location:' => "$start..$stop"];
                     push @data, [ '<hr>'            => '<hr>' ];
                     my @subs = $f->sub_SeqFeature;
                     my $count = 0;
                     foreach(@subs) {
                       $count++;
                       my $name  = $_->name; 
                       my $start = $_->start;
                       my $stop  = $_->stop;
                       my ($pct) = $_->get_tag_values("pct");
                       push @data, [ 'Bac End:'      => $name ]; 
                       push @data, [ 'Location:'  => "$start..$stop" ];
                       push @data, [ 'Percent Identity:' => "$pct %" ]; 
                       push @data, [ 'Score:' => $_->score ]; 
                       push @data, [ '<hr>' => '<hr>' ] if $count % 2;
                     }
                     hover("End-Sequenced Cosmid: $cname", \@data);
               }
bump_limit   = 50
label density = 200
key          = End-Sequenced Cosmids
citation     = <b>Sequence from cosmid ends mapped against <i>T. gondii</i> ME49, VEG and GT1 scaffolds.</b><br>  End-sequence data from cosmid clones were provided by Ian Paulsen at TIGR.  Sequencing was done using T3 and T7 primers represented as TH and TV, respectively, in the sequence IDs.<br>Cosmids with the TOX designation originated from Boris Striepen's laboratory, while those that start with PSB are from David Sibley's group. A detailed description of cosmid libararies from the Sibly lab is available <a href="http://toxomap.wustl.edu/cosmid.html">here</a>.

[Bacs]
feature      = alignment:Bacs
category     = Analysis
glyph        = segments
bgcolor      = yellow
description  = 0
height       = 10
stranded     = 0
title        = sub { my $f = shift;
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my $length = $stop - $start;
                     my $cname = $f->name;
                     my @data; 
                     push @data, [ 'Clone Size:'     => $length ]; 
                     push @data, [ 'Clone Location:' => "$start..$stop"];
                     push @data, [ '<hr>'            => '<hr>' ];
                     my @subs = $f->sub_SeqFeature;
                     my $count = 0;
                     foreach(@subs) {
                       $count++;
                       my $name  = $_->name; 
                       my $start = $_->start;
                       my $stop  = $_->stop;
                       my ($pct) = $_->get_tag_values("pct");
                       push @data, [ 'Bac End:'      => $name ]; 
                       push @data, [ 'Location:'  => "$start..$stop" ];
                       push @data, [ 'Percent Identity:' => "$pct %" ]; 
                       push @data, [ 'Score:' => $_->score ]; 
                       push @data, [ '<hr>' => '<hr>' ] if $count % 2;
                     }
                     hover("End-Sequenced BAC: $cname", \@data);
               }
bump_limit   = 50
key      = End-Sequenced BACs
citation     = <b>Sequence from BAC ends mapped against <i>T. gondii</i> ME49, VEG and GT1 scaffolds.</b><br>  End-sequence data from BAC clones were provided by The Wellcome Trust Sanger Institute.
[TGI]
feature      = match:TGI
category     = 4. Transcript Expression Evidence
glyph        = graded_segments
draw_target  = 1
show_mismatch = 1
canonical_strand = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "mediumblue" : "crimson";
               }
height       = 8 
title        = sub {
                 my $f = shift;
     my $name = $f->name;
     my $chr = $f->seq_id;
     my $loc = $f->location->to_FTstring;
     my ($desc) = $f->get_tag_values("Note");
      $desc ||= "<i>unavailable</i>";
     my ($db) = $f->get_tag_values("TGI");
     my ($ver) = $f->get_tag_values("TGIver");
     my @data;
     push @data, [ 'Accession: ' => $name ];
     # push @data, [ 'Location: ' => "$chr $loc" ];
     push @data, [ 'Description: ' => $desc ];
     hover("TIGR EST $db $ver Assembly: $name", \@data);
         }
link  = sub {
      my $f = shift;
     my $name = $f->name;
     my ($species) = $f->get_tag_values("TGISpecies"); 
           if ($name =~ m/^TC/) {
                   "http://compbio.dfci.harvard.edu/tgi/cgi-bin/tgi/tc_report.pl?gudb=$species&tc=$name";
     } elsif ($name =~ m/^(NP|HT|ET)/) {
        "http://compbio.dfci.harvard.edu/tgi/cgi-bin/tgi/egad_report.pl?id=$name";
     } else {
       "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=nucleotide&cmd=search&term=$name";
#                   "http://compbio.dfci.harvard.edu/tgi/cgi-bin/tgi/est_report.pl?gudb=$species&EST=$name";
     }
               }
key          = TIGR EST Assemblies (TGI)
citation     = Spliced alignments of consensus EST assemblies, provided by the TIGR Gene Indices project; spliced alignments were performed using <code>megablast</code> and the NCBI <code>Splign</code> algorithm.


[ORF]
feature      = alignment:ORF
category     = 9. Nucleotide Analysis
glyph        = cds
height       = 12
key          = ORF >/= 150 nucleotides (50 amino acids)
stranded     = 1
bgcolor      = sub {
        my ($f, undef, undef, undef, $glyph) = @_;
        my $flip = $glyph->{flip};
        $f->strand == ($flip ? -1 : 1) ? "navy" : "maroon";
    }
fgcolor      = black
description  = 0
label       = 0
bump_limit  = 10
title        = sub {
        my $f = shift;
        my $name = $f->name;
                    my $start  = $f->start;
                    my $stop   = $f->stop;
        my ($length) = $f->get_tag_values("Length");
                    my @data;
                    push @data, [ 'Name:'   => $name ];
                    push @data, [ 'Start:'  => $start ];
                    push @data, [ 'Stop:'   => $stop ];
                    push @data, [ 'Length:' => $length . ' aa' ];
                    return hover( 'ORFs >= 150 nt', \@data);
    }
citation     = Open reading frames 150 nucleotides (50 amino acids) or greater were generated by ToxoDB using a perl script. 


[WastlingMassSpecPeptides]
feature      = domain:WastlingMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        =  segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my $extdbname;
                     if(ref $f->parent =~ /GUS::Segment$/) {
                       ($extdbname) = $f->get_tag_values('ExtDbName');
                     } else {
                       ($extdbname) = $f->parent->get_tag_values('ExtDbName');
                     }
                     ($extdbname =~ m/1-d/i) && return 'mediumslateblue';
                     ($extdbname =~ m/mudpit/i) && return 'black';
                     ($extdbname =~ m/rhoptry/i) && return 'mediumblue';
                     return 'yellow';
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
                $extdbname =~ s/Wastling/assay: /i;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
    }
label      = 0
key          = Mass Spec Peptides (Wastling, et al.)
citation  =  J.M.Wastling, S. Sanderson, D. Xia and A.Z. Siddiki. 
             Departments of Pre-Clinical Veterinary Science & Veterinary Pathology, University of Liverpool, 
             Crown Street, Liverpool, United Kingdom L69 7ZJ.<br>
             See <A href="/toxo/showXmlDataContent.do?name=XmlQuestions.DataSources&datasets=Wastling1D_SDSPage,Wastling-1D_SDSPage-Soluble,Wastling-1D_SDSPage-Insoluble,Wastling-MudPIT-Soluble,Wastling-MudPIT-Insoluble,Wastling-Rhoptry&title=Mass%20Spec%20Peptides%20(Wastling,%20et%20al.)">Data Sources</a> for additional details.

[MurrayMassSpecPeptides]
feature      = domain:MurrayMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        =  segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/conoid-enriched/i) && return 'maroon';
                     ($extdbname =~ m/conoid-depleted/i) && return 'darksalmon';
                     return 'yellow';
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
                $extdbname =~ s/Murray/assay: /i;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
    }
label        = 0
key          = Mass Spec Peptides (Hu, et al.)
citation  =   Hu K, Johnson J, Florens L, Fraunholz M, Suravajjala S, 
       DiLullo C, Yates JR, Roos DS, Murray JM. (2006) 
       Cytoskeletal Components of an Invasion Machine - The Apical Complex of Toxoplasma gondii. 
       PLoS Pathog <b>2</b>:121-138.<br>
             See <A href="/toxo/showXmlDataContent.do?name=XmlQuestions.DataSources&datasets=Murray-Roos_Proteomics_Conoid-enriched,Murray-Roos_Proteomics_Conoid-depleted&title=Mass%20Spec%20Peptides%20(Hu,%20et%20al.)">Data Sources</a> for additional details.


[EinsteinMassSpecPeptides]
feature      = domain:EinsteinMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        =  segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/1D Gel Tachyzoite Membrane fraction 12-2006/i) && return 'sandybrown';
                     ($extdbname =~ m/1D Gel Tachyzoite Cytosolic fraction 03-2006/i) && return 'sienna';
                     ($extdbname =~ m/1D Gel Tachyzoite Membrane fraction 10-2006/i) && return 'peachpuff';
                     ($extdbname =~ m/MS Tachyzoite Membrane fraction 05-02-2006/i) && return 'peru';
                     ($extdbname =~ m/MS Tachyzoite Membrane fraction 06-2006/i) && return 'rosybrown';
                     ($extdbname =~ m/MS Tachyzoite Membrane fraction 10-2006/i) && return 'darkkhaki';
                     ($extdbname =~ m/MS Tachyzoite Membrane fraction 05-10-2006/i) && return 'brown';
                     ($extdbname =~ m/MS Tachyzoite Membrane fraction 02-03-2006/i) && return 'tan';
                     return 'yellow';
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
    }
label        = 0
key          = Mass Spec Peptides (Einstein)
citation     = Joseph Dybas, Dmitry Rykunov, Carlos Madrid, Edward Nieves, Fa-Yun Che, Hui Xiao, Kami Kim, Louis Weiss, Ruth Hogue Angeletti, Andr&#225;s Fiser (<a href="http://toro.aecom.yu.edu/biodefense/">Einstein Biodefense Proteomics Research Center</a>)

[CarruthersMassSpecPeptides]
feature      = domain:CarruthersMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        =  segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/Carruthers 2destinct peptides/i) && return 'plum';
                     ($extdbname =~ m/Carruthers MudPIT Twinscan hits/i) && return 'violet';
                     return 'yellow';
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
                $extdbname =~ s/MS Carruthers/assay: /i;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
    }
label        = 0
key          = Mass Spec Peptides (Carruthers, et al.)
citation  =  A large cohort of freely released <i>Toxoplasma</i> secretory proteins were analyzed by using two complementary methodologies -- two-dimensional electrophoresis/mass spectrometry and liquid chromatography/electrospray ionization-tandem mass spectrometry (MudPIT, shotgun proteomics). <a href="http://www.ncbi.nlm.nih.gov/pubmed/16002397">J Biol Chem. 2005 Oct 7;280(40):34233-44.</a>


[MorenoMassSpecPeptides]
feature      = domain:MorenoMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        =  segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/sample A/i) && return 'lime';
                     ($extdbname =~ m/sample G/i) && return 'green';
                     return 'yellow';
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
                $extdbname =~ s/Moreno/assay: /i;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
    }
label      = 0
key          = Mass Spec Peptides (Moreno, et al.)
citation  =  Samples were prepared by Silvia Moreno's laboratory from the RH strain (TypeI) of <i>T. gondii</i> at the University of Georgia, Athens, GA and analyzed by James Thompson and John Yates, III at The Scripps Research Institute, La Jolla, CA



[OtherMassSpecPeptides]
feature      = domain:OtherMassSpecPeptides 
category     = 2. Protein Expression Evidence
glyph        = segments
# -0 turns off transcript arrows at highlevel zoom
arrow_length = -0
font2color   = black
fgcolor      = black
connector_color = grey
connector    = hat
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/Wastling/i) && return 'mediumslateblue';
                     ($extdbname =~ m/Murray/i) && return 'salmon';
                     ($extdbname =~ m/Carruthers/i) && return 'violet';
                     ($extdbname =~ m/Moreno/i) && return 'seagreen';
                     return 'tan';     # for Einstein MS data
                   }
height       = sub { my $f = shift;
                     my ($soterm) = $f->get_tag_values('SOTerm');
                     return ($soterm eq 'protein_coding') ? 7 : 5;
                   }
pad_bottom   = -1
description  = 0 
link         = sub {
                return "javascript:void(0)";
               }
link_target  = sub {  my $f = shift;
    my ($desc) = $f->get_tag_values('Description');
                $desc =~s/\nreport:(.*)$//;
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
                $desc =~ s/[\r\n]/<br>/g;
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>$desc" ];
    hover('', \@data);
         }
label        = 0
key          = Mass Spec Peptides (Alternative Models)
citation  =  Peptides from various studies that mapped to gene models (and ORFs) other than the official one.  This may provide evidence of alternative gene models. <br><br> J.M.
             Wastling, S. Sanderson, D. Xia and A.Z. Siddiki. 
             Departments of Pre-Clinical Veterinary Science & Veterinary Pathology, University of Liverpool, 
             Crown Street, Liverpool, United Kingdom L69 7ZJ.<br>
             Hu K, Johnson J, Florens L, Franholz M, Suravajjala S, 
             DiLullo C, Yates JR, Roos DS, Murray JM. (2006) 
             Cytoskeletal Components of an Invasion Machine - The Apical Complex of Toxoplasma gondii.  PLoS Pathog <b>2</b>:121-138.<br> See <A href="/toxo/showXmlDataContent.do?name=XmlQuestions.DataSources&datasets=Wastling1D_SDSPage,Wastling-1D_SDSPage-Soluble,Wastling-1D_SDSPage-Insoluble,Wastling-MudPIT-Soluble,Wastling-MudPIT-Insoluble,Wastling-Rhoptry,Murray-Roos_Proteomics_Conoid-enriched,Murray-Roos_Proteomics_Conoid-depleted&title=Mass%20Spec%20Peptides">Data Sources</a> for additional details.

[BLASTX]
feature      = match:BLASTX
category     = Analysis
glyph        = graded_segments
strand_arrow = 1
#bump_limit  = 10
bgcolor      = sub { my $f = shift;
                     $f->strand == +1 ? "mediumblue" : "crimson";
               }
height       = 8
label        = 0
title        = sub { my $f = shift;
                     my $name = $f->name;
                     my $chr = $f->seq_id;
                     my $loc = $f->location->to_FTstring;
                     my ($e) = $f->get_tag_values("Expect");
                     my ($pctI) = $f->get_tag_values("PercentIdentity");
                     my ($desc) = $f->get_tag_values("Defline");
                     $desc ||= "<i>unavailable</i>";
                     $desc =~ s/\001.*//;
                     my @data;
                     push @data, [ 'Accession:'   => "gi\|$name" ];
                     push @data, [ 'Score:'       => $f->score ];
                     push @data, [ 'E-Value:'     => $e];
                     push @data, [ 'Identity %:'  => $pctI];
                     push @data, [ 'Description:' => $desc ];
                     hover("BLASTX: gi\|$name", \@data);
               }
link         = http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val=$name
key          = BLASTX Alignments
citation     = Genomic sequences were used as queries in BLASTX searches against NCBI's non-redundant protein database (NRDB).
#'


[SAGEtags]
feature      = SAGE:3-5prime
category     = 4. Transcript Expression Evidence
glyph        = arrow
strand_arrow = 0
linewidth    = 2
height       = 8
# color coding to indicate dir (red/blue) and abundance (faint, moderate, bright) for occurence (1-2, 3-5, >5) 
fgcolor      = sub { my $f            = shift;
                     my $strand       = $f->strand; 
                     my ($occurrence) = $f->get_tag_values('Occurrence'); 
                     if ($strand  eq "+1") {
                       return "lightblue" if ($occurrence < 3);
                       return "darkblue" if ($occurrence > 5);
                       return "blue";
                     } else {
                       return "pink" if ($occurrence < 3);
                       return "darkred" if ($occurrence > 5);
                       return "red";
                     }
               }
link        = /toxo/showRecord.do?name=SageTagRecordClasses.SageTagRecordClass&primary_key=$name
title = 1
link_target  = sub { my $f            = shift;
                     my $name         = $f->name;
                     my ($sourceId)    = $f->get_tag_values('SourceID'); 
                     my $start        = $f->start; 
                     my $stop         = $f->stop; 
                     my $strand       = $f->strand;
                     ($start,$stop) = ($stop,$start) if ($strand == -1); 
                     my ($tag)        = $f->get_tag_values('Sequence'); 
               my $sageDb_url = "<a target='new' href=http://vmbmod10.msu.montana.edu/vmb/cgi-bin/sage.cgi?prevpage=newsage4.htm;normal=yes;database=toxoditagscorrect;library=sp;intag=" 
           . $tag . ">TgSAGEDB</a>";
                     my ($occurrence) = $f->get_tag_values('Occurrence'); 
                     my @data; 
                     push @data, [ 'Name:'          => "$sourceId" ];
                     push @data, [ 'Temporary external ID:' => "$name" ];
                     push @data, [ 'Location:'        => "$start..$stop" ];
                     push @data, [ 'Sequence:'        => $tag ];
                     push @data, [ 'Found in genome:' => $occurrence ];
                     push @data, [ 'Link'             => $sageDb_url];
                     my $bulkEntries = $f->bulkAttributes();
                     push @data, [ "<b>Library</b>" => "<b>Percent | RawCount</b>" ];
                     foreach my $item (@$bulkEntries) {
                       my $lib = $item->{LIBRARY_NAME};
                       my $raw_count = $item->{RAW_COUNT};
                       my $percent = sprintf("%.3f", $item->{LIBRARY_TAG_PERCENTAGE});
                       push @data, [ "$lib" => "$percent % | $raw_count" ];
                     }
                     return hover( "Sage Tag - Temp ID $name", \@data); 
                   } 
key          = SAGE tags
label   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my $strand  = $f->strand;
      $start = $stop if ($strand == -1);
      my ($tag_seq) = $f->get_tag_values("Tag"); 
      my ($count) = $f->get_tag_values("Occurrence"); 
      # return  "3'-" . $tag_seq;
      return  $start . " [" . $count . "]"; 
     }
citation = SAGE tags are from the <a target='new' 
  href="http://vmbmod10.msu.montana.edu/vmb/white-lab/newsage.htm">TgSAGEDB</a>
  database.  Only 3' tags that have been observed at least twice
  during sequencing are shown.  All 5' tags are shown, but without
  frequency information, as the counts are unreliable (and the 5' tags
  themselves are often artifactual).  The number following the tag
  sequence indicates the redundancy of the tag in the genome; tags
  matching only once (or twice) in the genome are considered unique
  (though tags that match twice should be checked to see that the
  other genomic location is not likely to be transcriptionally
  active). 


[GeneticMarkers]
feature       = GeneticMarkers:Sibley
category      = 7. Genetic Features [show < 60 kbp for details]
glyph         = diamond
description   = 0
label         = 1
#fgcolor       = darkslateblue
#bgcolor       = darkslateblue
key           = Genetic Markers
label density = 50
bgcolor  = sub {
       my $f = shift;
             my $variants = $f->bulkAttributes();
             my ($me49) = $f->get_tag_values("RefNA"); 
             my ($rh, $veg);
             foreach my $variant (@$variants) {
               $rh   = $variant->{ALLELE} if ($variant->{STRAIN} eq 'RH');
               $veg  = $variant->{ALLELE} if ($variant->{STRAIN} eq 'VEG');
             }
       my $color;
       if ($me49 eq $rh && $me49 eq $veg) {
         $color = 'gray';
       } elsif ($me49 eq $rh && $me49 ne $veg) {  # type 3 or blue
       $color = 'blue';
       } elsif ($rh eq $veg && $me49 ne $rh) {    # type 2 or green
       $color = 'green';
       } elsif ($me49 eq $veg && $me49 ne $rh) {  # type 1 or red
       $color = 'red';
       } elsif ($me49 ne $rh && $me49 ne $veg) {
       $color = 'black';
       }
       return $color;
      }
#bgcolor  = sub {
#       my $f = shift;
#             my ($nonSyn) = $f->get_tag_values("NonSyn"); 
#             return $nonSyn? 'blue' : 'lightblue'; 
#          }
fgcolor  = bgcolor
title    = sub {
       my $f = shift;
             my ($isCoding) = $f->get_tag_values("IsCoding"); 
             my ($posInCDS) = $f->get_tag_values("PositionInCDS"); 
             my ($posInProtein) = $f->get_tag_values("PositionInProtein"); 
             my ($refStrain) = $f->get_tag_values("RefStrain"); 
             my ($refAA) = $f->get_tag_values("RefAA"); 
             my ($refNA) = $f->get_tag_values("RefNA"); 
             my ($nonSyn) = $f->get_tag_values("NonSyn"); 
             my ($src_id) = $f->get_tag_values("SourceID"); 
             my $link = qq(<a href=/toxo/showRecord.do?name=SnpRecordClasses.SnpRecordClass&primary_key=$src_id>$src_id</a>);
             my $variants = $f->bulkAttributes();
       my @data;
             push @data, [ 'SNP'  => $link ];
             push @data, [ 'Location:'  => $f->start ];
             my $class = 'Non-Coding';
             if ($isCoding) {
                $refAA = ": $refAA"; 
                my $non = $nonSyn? 'non-' : '';
                $class = "Coding (${non}synonymous)";
                push @data, [ 'Position in CDS:'  => $posInCDS ];
                push @data, [ 'Position in Protein:'  => $posInProtein ];
             }
             push @data, ["Strain: $refStrain (reference)"=>"$refNA $refAA"];
             foreach my $variant (@$variants) {
               my $strain = $variant->{STRAIN};
               next if ($strain eq $refStrain);
               my $na = $variant->{ALLELE};
               my $aa = $variant->{PRODUCT};
               my $info = "$na" . ($isCoding? " : $aa" : "");
               push @data, [ "Strain: $strain" => $info ];
             }
             hover( "Genetic Markers - $class", \@data);
    }
citation     = <b>Genetic markers displayed on the entire chromosome.</b> <br><br> PCR/RFLP markers were developed and used to generate a
  chromosomal linkage map based on two independent crosses (type II x
  III and I x III strains).  More information is available at <a target='new'
  href="http://www.toxomap.wustl.edu/">www.toxomap.wustl.edu</a>.
  See <A href="/toxo/showXmlDataContent.do?name=XmlQuestions.DataSources&datasets=GeneticMarkers_Sibley&title=Genetic%20Markers">Data Sources</a> for details.


[SNPs]
feature  = SNP:Stanford
category      = 7. Genetic Features [show < 60 kbp for details]
#glyph   = allele_tower
glyph    = diamond
key      = Genotyped SNPs
bgcolor  = sub {
       my $f = shift;
             my $variants = $f->bulkAttributes();
             my ($me49) = $f->get_tag_values("RefNA"); 
             my ($rh, $veg);
             foreach my $variant (@$variants) {
               $rh   = $variant->{ALLELE} if ($variant->{STRAIN} eq 'RH');
               $veg  = $variant->{ALLELE} if ($variant->{STRAIN} eq 'VEG');
             }
       my $color;
       if ($me49 eq $rh && $me49 eq $veg) {
         $color = 'gray';
       } elsif ($me49 eq $rh && $me49 ne $veg) {  # type 3 or blue
       $color = 'blue';
       } elsif ($rh eq $veg && $me49 ne $rh) {    # type 2 or green
       $color = 'green';
       } elsif ($me49 eq $veg && $me49 ne $rh) {  # type 1 or red
       $color = 'red';
       } elsif ($me49 ne $rh && $me49 ne $veg) {
       $color = 'black';
       }
       return $color;
      }
#bgcolor  = sub {
#       my $f = shift;
#             my ($nonSyn) = $f->get_tag_values("NonSyn"); 
#             return $nonSyn? 'blue' : 'lightblue'; 
#          }
fgcolor  = bgcolor
#title = sub{}
#link_target=\&snpTitleQuick
title    = sub {
       my $f = shift;
             my ($isCoding) = $f->get_tag_values("IsCoding"); 
             my ($posInCDS) = $f->get_tag_values("PositionInCDS"); 
             my ($refStrain) = $f->get_tag_values("RefStrain"); 
             my ($refNA) = $f->get_tag_values("RefNA"); 
             my ($nonSyn) = $f->get_tag_values("NonSyn"); 
             my ($src_id) = $f->get_tag_values("SourceID"); 
             my $link = qq(<a href=/toxo/showRecord.do?name=SnpRecordClasses.SnpRecordClass&primary_key=$src_id>$src_id</a>);
             my $variants = $f->bulkAttributes();
       my @data;
             push @data, [ 'SNP'  => $link ];
             push @data, [ 'Location:'  => $f->start ];
             my $class = 'Non-Coding';
             if ($isCoding) {
                my $non = $nonSyn? 'non-' : '';
                $class = "Coding (${non}synonymous)";
                push @data, [ 'Position in CDS:'  => $posInCDS ];
             }
             push @data, ["$refStrain (reference)"=>"NA=$refNA"];
             foreach my $variant (@$variants) {
               my $strain = $variant->{STRAIN};
               next if ($strain eq $refStrain);
               my $na = $variant->{ALLELE};
               push @data, [ "$strain" => "NA=$na" ];
             }
             hover( "Genotyped SNP - $class", \@data);
    }
link = javascript:void(0)
label density = 2
height = \&snpHeight
citation = Type I, II and III genotype SNPs.  Please see <a href="http://www.ncbi.nlm.nih.gov/pubmed/16801557"> Proc Natl Acad Sci U S A. 2006 Jul 5;103(27):10514-9</a> for additional information. 

[AlignmentSNPs]
feature  = SNP:Alignment
category      = 7. Genetic Features [show < 60 kbp for details]
glyph    = diamond
key      = SNPs by strain
bgcolor  = sub {
       my $f = shift;
             my $variants = $f->bulkAttributes();
             my ($me49) = $f->get_tag_values("RefNA"); 
             my ($gt1, $veg);
             foreach my $variant (@$variants) {
               $gt1   = $variant->{ALLELE} if ($variant->{STRAIN} eq 'GT1');
               $veg  = $variant->{ALLELE} if ($variant->{STRAIN} eq 'VEG');
             }
       my $color;
       if ($me49 eq $gt1 && $me49 eq $veg) {
         $color = 'gray';
       } elsif ($me49 eq $gt1 && $me49 ne $veg) {  # type 3 or blue
       $color = 'blue';
       } elsif ($gt1 eq $veg && $gt1 ne $me49) {   # type 2 or green
       $color = 'green';
       } elsif ($me49 eq $veg && $me49 ne $gt1) {  # type 1 or red
       $color = 'red';
       } elsif ($me49 ne $gt1 && $me49 ne $veg) {
       $color = 'black';
       }
       return $color;
      }
#bgcolor  = sub {
#       my $f = shift;
#             my ($nonSyn) = $f->get_tag_values("NonSyn"); 
#             return $nonSyn? 'blue' : 'lightblue'; 
#          }
fgcolor  = bgcolor
title = sub{}
link_target=\&snpTitleQuick
link = javascript:void(0)
label density = 2
height = \&snpHeight
citation = Genotyped SNPs identified by NUCmer alignments of GT1, VEG and, RH (only chrIa and chrIb) to ME49.
  <p><table width="50%">
  <tr><th align="left" width="60">Color</th><th align="left">Type</th></th></tr>
  <tr><td><font color="red"><b>Red</b></font></td><td>&nbsp;&nbsp;&nbsp;I</td></tr>
  <tr><td><font color="green"><b>Green</b></font></td><td>&nbsp;&nbsp;II</td></tr>
  <tr><td><font color="blue"><b>Blue</b></font></td><td>&nbsp;III</td></tr>
  <!--tr><td><font color="black"><b>Black</b></font></td><td>None</td></tr-->
  </table>
  Please note: pop-up box will show details if viewing region is less than 60 kbp.

[AlignmentSNPsByClass]
feature  = SNP:Alignment
category      = 7. Genetic Features [show < 60 kbp for details]
glyph    = diamond
key      = SNPs by coding potential
bgcolor   = sub {
              my $f = shift;
              my ($isCoding) = $f->get_tag_values("IsCoding"); 
              my $color = 'white';
              if ($isCoding) {
                my ($nonSyn) = $f->get_tag_values("NonSyn"); 
                $color = $nonSyn? 'blue' : 'lightblue'; 
              }
              return $color; 
            }
fgcolor  = bgcolor
title = sub{}
link_target=\&snpTitleQuick
link = javascript:void(0)
label density = 2
height = \&snpHeight
citation = Genotyped SNPs identified by NUCmer alignments of GT1, VEG and, RH (only chrIa and chrIb) to ME49.
  <p><table width="50%">
  <tr><th align="left" width="60">Color</th><th align="left">Class</th></th></tr>
  <tr><td bgcolor='black'><font color="whitesmoke"><b>White</b></font></td><td>&nbsp;Non-Coding</td></tr>
  <tr><td><font color="blue"><b>Blue</b></font></td><td>&nbsp;Coding (non-synonymous)</td></tr>
  <tr><td><font color="lightblue"><b>LightBlue</b></font></td><td>&nbsp;Coding (synonymous)</td></tr>
  </table>
  Please note: pop-up box will show details if viewing region is less than 60 kbp.

#[AlignmentSNPs:1000000]
#feature      = SNP:density
#glyph        = xyplot
#graph_type   = boxes
#bump density = 1
#bgcolor      = lightslategray
#fgcolor      = bgcolor
#height       = 60
#min_score    = 0
#max_score    = 100
#key          = Alignment SNPs - Density [zoom in for more detail]

[AffymetrixExpressionNuclearCoding]
feature  = AffymetrixProbes:NuclearCoding
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = 3'-Biased Probes for Coding Genes
citation = Eleven 3' biased probes per gene using a perfect match only design. Draft 3 gene models were used for designing these probes.
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( '3prime\-biased Probes for Coding Genes', \@data);   
  }
[AffymetrixExpressionResequencing]
feature  = AffymetrixProbes:Resequencing
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = Resequencing Probes for Select Genes
citation = Tiling probes were designed against selected genes:<br> TGME49_027280, TGME49_075440, TGME49_066960, TGME49_107570, TGME49_104870, TGME49_095600, TGME49_108020, TGME49_109590, TGME49_112480, TGME49_116400, TGME49_062730, TGME49_059020, TGME49_055260, TGME49_120190, TGME49_120180, TGME49_080570, TGME49_003310, TGME49_001780, TGME49_033450, TGME49_033460, TGME49_033480, TGME49_071050
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Affymetrix Resequencing Probes', \@data);   
  }

#[AffymetrixExpressionNuclearNonCoding]
#feature  = AffymetrixProbes:NuclearNonCoding
#category = 8. Microarray Probe-Mapping
#glyph    = graded_segments
#height   = 12
#key      = Probes for Non-Coding Genes
#citation = These probes were designed based on 22 non-coding nuclear genes.
#stranded = 1
#bgcolor      = sub {
#                 my $f = shift;
#     $f->strand == +1 ? "navy" : "maroon";
#               }
#fgcolor  = bgcolor
#bump_limit  = 10
#title   = sub {
#      my $f = shift;
#      my $start = $f->start;
#      my $stop  = $f->stop;
#      my ($count) = $f->get_tag_values("Count"); 
##            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
#            my $probeId = $f->name; 
#      my @data;
#            push @data, ['ProbeSetID:' => $probeSet ];
#            push @data, ['ProbeID:' => $probeId ];
#        push @data, ['Start:'        => $start];
#        push @data, ['Stop:'         => $stop];
#        push @data, ['Count:' => $count];
#      hover( 'Affymetrix Nuclear NonCoding Probes', \@data);   
#  }

[AffymetrixExpressionIntrons]
feature  = AffymetrixProbes:Introns
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = Intron Probes for Genes on chromosome Ib only
citation = Five for each predicted intron on chromosome Ib (Draft 3 annotation).
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Affymetrix Ib Intron Probes', \@data);   
  }

[AffymetrixExpressionExons]
feature  = AffymetrixProbes:Exons
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = Exon Probes for Genes on chromosome Ib only
citation = Six probes for each exon on chromosome Ib (Draft 3 annotation).
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Affymetrix Ib Exon Probes', \@data);   
  }
[AffymetrixExpressionNuclearCodingAS]
feature  = AffymetrixProbes:NuclearCodingAS
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = Antisense Probes for Genes on chromosome Ib only
citation = Probes to assess antisense transcription (20 probes from 227 genes on Chromosome Ib; Draft 3 annotation).
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Affymetrix Ib Antisense Probes', \@data);   
  }
[AffymetrixExpressionChIP]
feature  = AffymetrixProbes:ChIP
category = 8. Microarray Probe-Mapping
glyph    = graded_segments
height   = 12
key      = ChIP Probes for Select Promoters
citation = Titled probes (10nt resolution) across a ~1000 nt region upstream of some genes.<br> Genes with such probes: TGME49_059020, TGME49_032350, TGME49_033460, TGME49_071050, TGME49_066960, TGME49_091040, TGME49_007160, TGME49_007150.
stranded = 1
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "navy" : "maroon";
               }
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Affymetrix ChIP Probes', \@data);   
  }

[AffymetrixExpressionESTSNPs]
feature  = AffymetrixProbes:GenotypingEstSNPs
category = 8. Microarray Probe-Mapping
glyph    = generic
label    = 0
key      = Probes for EST-based SNPs
citation = Probes were designed against 3,490 SNPs inferred from <i>T. gondii</i> EST data (4 probes/SNP).
bgcolor  = black
fgcolor  = bgcolor
bump_limit  = 10
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'EST-based SNP Probes', \@data);   
  }

[AffymetrixExpressionGenotypingMarkers]
feature  = AffymetrixProbes:GenotypingMarkers
category = 8. Microarray Probe-Mapping
glyph    = generic
label    = 0
key      = Probes for Genetic Markers
citation = Probes designed based on SNPs within recognized type I, II and III RFLPs (228 SNPs, 40 probes/SNP).
bgcolor  = black
fgcolor  = bgcolor
title   = sub {
      my $f = shift;
      my $start = $f->start;
      my $stop  = $f->stop;
      my ($count) = $f->get_tag_values("Count"); 
            my ($probeSet) = $f->get_tag_values("ProbeSet"); 
            my $probeId = $f->name; 
      my @data;
            push @data, ['ProbeSetID:' => $probeSet ];
            push @data, ['ProbeID:' => $probeId ];
        push @data, ['Start:'        => $start];
        push @data, ['Stop:'         => $stop];
        push @data, ['Count:' => $count];
      hover( 'Genetic Marker Probes', \@data);   
  }

#[AffymetrixExpressionBLASTX]
#feature  = AffymetrixProbes:BLASTXTranscriptDiscovery
#category = Microarray Probe-Mapping
#glyph    = transcript
#key      = Transcript Discovery (BLASTX to nr)
#stranded = 1
#bgcolor      = sub {
#                 my $f = shift;
#                 $f->strand == +1 ? "navy" : "maroon";
#                }
#fgcolor  = bgcolor
#bump_limit  = 10
#title   = sub {
#            my $f = shift;
#            my $start = $f->start;
#            my $stop  = $f->stop;
#            my $probeId = $f->name; 
#            my @data;
#            push @data, ['ProbeID:' => $probeId ];
#            push @data, ['Start:'        => $start];
#            push @data, ['Stop:'         => $stop];
#            hover( 'Region to Tile', \@data);   
#           }

#[AffymetrixExpressionTBLASTN]
#feature  = AffymetrixProbes:TBLASTNTranscriptDiscovery
#category = Microarray Probe-Mapping
#glyph    = transcript
#key      = Transcript Discovery (TBLASTN to OrthoMCL)
#stranded = 1
#bgcolor      = sub {
#                 my $f = shift;
#                 $f->strand == +1 ? "navy" : "maroon";
#                }
#fgcolor  = bgcolor
#bump_limit  = 10
#title   = sub {
#            my $f = shift;
#            my $start = $f->start;
#            my $stop  = $f->stop;
#            my $probeId = $f->name; 
#            my @data;
#            push @data, ['ProbeID:' => $probeId ];
#            push @data, ['Start:'        => $start];
#            push @data, ['Stop:'         => $stop];
#            hover( 'Region to Tile', \@data);   
#           }

#[AffymetrixExpressionESTDiscovery]
#feature  = AffymetrixProbes:ESTTranscriptDiscovery
#category = Microarray Probe-Mapping
#glyph    = transcript
##label    = 0
#key      = Transcript Discovery (ApiDoTs Clusters)
#stranded = 1
#bgcolor      = sub {
#                 my $f = shift;
#                 $f->strand == +1 ? "navy" : "maroon";
#                }
#fgcolor  = bgcolor
#bump_limit  = 10
#title   = sub {
#            my $f = shift;
#            my $start = $f->start;
#            my $stop  = $f->stop;
#            my $probeId = $f->name; 
#            my @data;
#            push @data, ['ProbeID:' => $probeId ];
#            push @data, ['Start:'        => $start];
#            push @data, ['Stop:'         => $stop];
#            hover( 'Region to Tile', \@data);   
#           }


[ChIPEinsteinRH]
feature      = ChIP_RH:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = xyplot
graph_type   = points
point_symbol = filled_square
point_radius = 1
height       = 40
max_score    = 5
min_score    = -2
label        = 0
stranded     = 1
title        = sub{}
fgcolor      = blue
bgcolor      = blue
part_color   = \&chipColor
key          =  ChIP-chip data from Type I (RH) tachyzoites
citation     = <b>Evidence of expression in Type I (RH) tachyzoites based on ChIP-chip peaks.</b><br> Two different antibodies were used identifying different chromatin marks which indicate active transcription. Coincident Histone 3 Lysine 4 trimethylation (H3K4me3) and Histone 3 Lysine 9 acetylation (H3K9ac) peaks are highly correlated with active promoters, with H3K4me3 marks oriented closer to the 5' end of the gene. Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.
[ChIPEinsteinPLK]
feature      = ChIP_PLK:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = xyplot
graph_type   = points
point_symbol = filled_square
point_radius = 1
height       = 40
max_score    = 5
min_score    = -2
label        = 0
stranded     = 1
title        = sub{}
fgcolor      = blue
bgcolor      = blue
part_color   = \&chipColor
key          =  ChIP-chip data from Type II (PLK) tachyzoites
citation     = <b>Evidence of expression in Type II (PLK) tachyzoites based on ChIP-chip peaks.</b><br> Two different antibodies were used identifying different chromatin marks which indicate active transcription. Coincident Histone 3 Lysine 4 trimethylation (H3K4me3) and Histone 3 Lysine 9 acetylation (H3K9ac) peaks are highly correlated with active promoters, with H3K4me3 marks oriented closer to the 5' end of the gene. Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.

[ChIPEinsteinTypeIII]
feature      = ChIP_TypeIII:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = xyplot
graph_type   = points
point_symbol = filled_square
point_radius = 1
height       = 40
max_score    = 5
min_score    = -2
label        = 0
stranded     = 1
fgcolor      = blue
bgcolor      = blue
part_color   = \&chipColor
key          = ChIP-chip data from Type III (CTG) tachyzoites
citation     = <b>Evidence of expression in Type III (CTG) tachyzoites based on ChIP-chip peaks.</b><br> Two different antibodies were used identifying different chromatin marks which indicate active transcription. Coincident Histone 3 Lysine 4 trimethylation (H3K4me3) and Histone 3 Lysine 9 acetylation (H3K9ac) peaks are highly correlated with active promoters, with H3K4me3 marks oriented closer to the 5' end of the gene. Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.

[ChIPEinsteinRHPeaks]
feature      = ChIP_peaks_RH:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = segments
height       = \&peakHeight 
label        = 0
stranded     = 1
fgcolor      = \&chipColor
bgcolor      = \&chipColor
key          = Called ChIP-chip peaks from Type I (RH) tachyzoites
citation     = Peak calls were made by the data provider.  Line width reflects the width of the called peak and line thickness represents peak height (scale ranges from 1 to 6). Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.
title        = sub{}
link_target  =\&peakTitle
link         = javascript:void(0)
#balloon hover = [balloon265] sub { my $f = shift;
#                    my ($seg) = split /:/, $f->parent;
#                    my $name = $f->name;
#                    my $start = int($f->start);
#                    my $end = int($f->end);
#                    my $type = $f->type;
#                    $type =~ s/:/%3A/g;
#                    my $link = "url:/cgi-bin/apidb_gbrowse_ajax/toxodb?seg=$seg;start=$start;end=$end;type=$type;name=$name;src=toxodb;remote=chip";
#                    return  $link;
#                    }
#balloon sticky = 0

[ChIPEinsteinPLKPeaks]
feature      = ChIP_peaks_PLK:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = segments
height       = \&peakHeight 
label        = 0
label        = 0
stranded     = 1
fgcolor      = \&chipColor
bgcolor      = \&chipColor
key          =  Called ChIP-chip peaks from Type II (PLK) tachyzoites
citation     = Peak calls were made by the data provider.  Line width reflects the width of the called peak and line thickness represents peak height (scale ranges from 1 to 6). Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.
title        = sub{}
link_target  =\&peakTitle
link         = javascript:void(0)
#balloon hover = [balloon265] sub { my $f = shift;
#                    my ($seg) = split /:/, $f->parent;
#                    my $name = $f->name;
#                    my $start = int($f->start);
#                    my $end = int($f->end);
#                    my $type = $f->type;
#                    $type =~ s/:/%3A/g;
#                    my $link = "url:/cgi-bin/apidb_gbrowse_ajax/toxodb?seg=$seg;start=$start;end=$end;type=$type;name=$name;src=toxodb;remote=chip";
#                    return  $link;
#                    }
#balloon sticky = 0

[ChIPEinsteinTypeIIIPeaks]
feature      = ChIP_peaks_TypeIII:Einstein
category     = 3. ChIP on chip Transcript Expression Evidence (green = H3K4Me3; orange = H3K9ac)
glyph        = segments
height       = \&peakHeight 
label        = 0
label        = 0
stranded     = 1
fgcolor      = \&chipColor
bgcolor      = \&chipColor
key          = Called ChIP-chip peaks from Type III (CTG) tachyzoites
citation     = Peak calls were made by the data provider.  Line width reflects the width of the called peak and line thickness represents peak height (scale ranges from 1 to 6). Experiments were performed in duplicate -- H3K4Me3 replicas are in shades of green and H3K9ac replicas are in shades of orange.
title        = sub{}
link_target  =\&peakTitle
link         = javascript:void(0)
#balloon hover = [balloon265] sub { my $f = shift;
#                    my ($seg) = split /:/, $f->parent;
#                    my $name = $f->name;
#                    my $start = int($f->start);
#                    my $end = int($f->end);
#                    my $type = $f->type;
#                    $type =~ s/:/%3A/g;
#                    my $link = "url:/cgi-bin/apidb_gbrowse_ajax/toxodb?seg=$seg;start=$start;end=$end;type=$type;name=$name;src=toxodb;remote=chip";
#                    return  $link;
#                    }
#balloon sticky = 0

[LowComplexity]
feature      = lowcomplexity:dust
category     = 9. Nucleotide Analysis
glyph        = segments
bgcolor      = grey
height       = 6
description  = 0
label        = 0
link         = 
key          = Low Complexity Regions
citation     = Regions of low sequence complexity, as defined by the
               <code>dust</code> algorithm

[TandemRepeat]
feature      = TandemRepeat:TRF
category     = 9. Nucleotide Analysis
glyph        = segments
bgcolor      = darkgrey
height       = 6
description  = 0
label        = 0
link         = 
key          = Tandem Repeats
citation     = Regions of tandem repeats, as defined by the
               <code>Tandem Repeats Finder</code> program by Gary Benson


[TranslationF]
glyph        = translation
category     = 9. Nucleotide Analysis
global feature = 1
frame0       = cadetblue
frame1       = blue
frame2       = darkblue
height       = 20
fgcolor      = purple
strand       = +1
translation  = 3frame
link         =
key          = 3-frame translation (forward)
citation     = This draws three frame conceptutal translations of the forward strand. At low magnifications (zoomed way out), this track draws littel symbols indicating where start and stop codons are. At high magnifications, the actual amino acid sequence comes into view. <br /><br /> Frame +1: cadetblue <br />Frame +2: blue <br />Frame +3: darkblue

[TranslationR]
glyph        = translation
category     = 9. Nucleotide Analysis
global feature = 1
frame0       = darkred
frame1       = red
frame2       = crimson
height       = 20
fgcolor      = blue
strand       = -1
link         =
translation  = 3frame
key          = 3-frame translation (reverse)
citation     = This draws three frame conceptutal translations of the reverse strand. At low magnifications (zoomed way out), this track draws littel symbols indicating where start and stop codons are. At high magnifications, the actual amino acid sequence comes into view. <br /><br />Frame -1: darkred<br />Frame -2: red<br />Frame -3: crimson<br />

[DNA/GC Content]
glyph        = dna
category     = 9. Nucleotide Analysis
global feature = 1
height       = 40
do_gc        = 1
gc_window    = 100
link         =
fgcolor      = red
axis_color   = blue
key          = DNA/GC Content
citation     = This displays a GC content graph of the reference sequence at low magnifications and the DNA sequence itself at higher magnifications. GC content is calculated based on a sliding window set at 100 nucleotides.

[GeneDensity]
category     = 1. Gene Models
feature      = annotation:density
preset       = GeneDensity
glyph        = xyplot
graph_type   = boxes
bump density = 1
bump density = 1
scale        = right
#scale       = both
bgcolor      = lightslategray
fgcolor      = bgcolor
height       = 60
min_score    = 0
label        = 0
key          = Gene Density
citation     = Density plot of annotated genes, in the displayed genomic region.  The calculation for this is done as for gene density accross the entire chromosome (see above).
