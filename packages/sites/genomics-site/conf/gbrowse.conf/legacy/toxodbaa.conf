[GENERAL]
header        = <table><tr><td width="160" align="center" valign="middle"><a href="/" title='ToxoDB Home'><img border="0" src="/toxo/images/toxodb_logo-rotated.jpg" ></a><br><a href="/">ToxoDB Home</a></td>
   <td align="center" valign="middle"><font size="+3" color="darkblue">ToxoDB Protein Browser</font></td></tr>
   </table>
description   = ToxoDB Protein Sequence Browser
db_adaptor    = DAS::GUS
db_args       = sub {
                 use ApiCommonWebsite::Model::ModelConfig;
                 use ApiCommonWebsite::Model::DbUtils;
                 my $c = new ApiCommonWebsite::Model::ModelConfig('ToxoDB');
                 my $resolvedDsn = ApiCommonWebsite::Model::DbUtils->resolveOracleDSN($c->appDb->dbiDsn);
                 { -sqlfile => $ENV{DOCUMENT_ROOT}.'/../conf/gbrowse.conf/toxodbaa.xml',
                   -dsn     => $resolvedDsn,
                   -user    => $c->appDb->login,
                   -pass    => $c->appDb->password,
                 }
               }

#plugins = AttributeHiliter 
plugins = Aligner FastaDumper GFFDumper BatchDumper

# 'region' or 'contig' would be other typical choices,
reference class  = protein

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
js          = /gbrowse/js

# using full url breaks under mod_perl.  Bio::Graphics::Browser calls lookup_uri()
# on it. That is, don't do this:
#tmpimages   = http://toxodb.org/gbrowse/tmp /var/www/toxo.org/html/gbrowse/tmp 
tmpimages   = /gbrowse/tmp

# advanced features
balloon tips    = 1
drag and drop   = 0

# one hour 
cache time      = 1

# popup balloon configuration
# 'balloon' is the default
#custom balloons = [balloon]
#           images    = /gbrowse/images/balloons
#           delayTime = 500
#           maxWidth  = 660
#           maxHeight = 200
#
#           [balloon265]
#           images    = /gbrowse/images/balloons
#           maxWidth  = 465
#           delayTime = 100

# 24hrs/day * 360 days
image cachetime   = 8760

# Default glyph settings
glyph         = generic
height        = 8
bgcolor       = cyan
fgcolor       = cyan
label density = 25
bump density  = 2000

show sources  = 0
default varying = 1 # tracks appear as defined below, not in alphabetical order

# where to link to when user clicks in detailed view
link        = /cgi-bin/gbrowse/toxodbaa

# what image widths to offer
image widths  = 640 800 1024 1280

# default width of detailed view (pixels)
default width = 800
default features = WastlingMassSpecPeptides MurrayMassSpecPeptides EinsteinMassSpecPeptides CarruthersMassSpecPeptides MorenoMassSpecPeptides InterproDomains SignalP TMHMM HydropathyPlot LowComplexity BLASTP 

# max and default segment sizes for detailed view
max segment     = 1000000
default segment = 500

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000

# colors of the overview, detailed map and key
overview bgcolor = lavenderblush
detailed bgcolor = thistle
key bgcolor      = mistyrose

# examples to show in the introduction
examples = TGME49_053730
           methyltransferase

# "automatic" classes to try when an unqualified identifier is given
automatic classes = protein

language = en

empty_tracks = dashed

# a footer
footer = <hr>

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = <script type="text/javascript" src="/gbrowse/wz_tooltip.js"></script>

init_code = @main::rainbow = qw(red green yellow blue khaki pink orange cyan purple);
            sub hover {
        use HTML::Template;
        my ($name, $data) = @_;
        my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl');
        $tmpl->param(DATA => [ map { { @$_ > 1 ? (KEY => $_->[0], VALUE => $_->[1]) : (SINGLE => $_->[0]) } } @$data ]);
        my $str = $tmpl->output;
        $str =~ s/'/\\'/g;
        $str =~ s/\"/&quot;/g;
        $str =~ s/\s+$//;
        my $cmd = "this.T_STICKY=false;this.T_TITLE='$name'";
        $cmd = qq{" onMouseOver="$cmd;return escape('$str')};
        return $cmd;
      }
      sub hover2 {
        use HTML::Template;
        my ($name, $data) = @_;           
        my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl');           
        $tmpl->param(DATA => [ map { { Key => $_->[0], Value => $_->[1], } } @$data ]);
        my $str = $tmpl->output;
        return $str;
      }

# Advanced feature: an example of callbacks to be run remotely
# by gbrowse_details for AJAX/iframe balloons
#[TOOLTIPS]
#chip = sub {  my $args  = shift;
#              my $f  = $args->{feature};
#              my $name = $f->name;
#              my ($desc) = $f->get_tag_values('Description');
#              $desc =~ s/[\r\n]/<br>/g;
#              my ($seq) =  $f->get_tag_values('PepSeq');
#              my @data;
#              push @data, [ '' => "sequence:$seq<br>$desc" ];
#              hover2("$name", \@data); 
#            }


### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

###################################
# Plugin configuration
###################################

[WastlingMassSpecPeptides]
feature      = domain:WastlingMassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/1-d/i) && return 'mediumslateblue';
                     ($extdbname =~ m/mudpit/i) && return 'black';
                     ($extdbname =~ m/rhoptry/i) && return 'cadetblue';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = -1 
description  = 0 
link  =  javascript:void(0)
link_target  = sub { my $f = shift;
                     my ($desc) = $f->get_tag_values('Description');
                     $desc =~ s/[\r\n]/<br>/g;
                     my ($seq) =  $f->get_tag_values('PepSeq');
                     my @data;
                     push @data, [ '' => "sequence:$seq<br>$desc" ];
                     hover('', \@data);
                }
#balloon hover  = [balloon265] sub { my $f = shift;
#                    my ($seg) = split /:/, $f->parent;
#                    my $name = $f->name;
#                    my $start = int($f->start);
#                    my $end = int($f->end);
#                    my $type = $f->type;
#                    $type =~ s/:/%3A/g;
#                    my $link = "url:/cgi-bin/apidb_gbrowse_ajax/toxodbaa?seg=$seg;start=$start;end=$end;type=$type;name=$name;src=toxodbaa;remote=chip";
#                    return  $link;
#                    }
#balloon sticky  = 1
label      = 0
key          = Mass Spec Peptides (Wastling, et al.)
citation  = <b>Preliminary</b> analysis by J.M. Wastling, S. Sanderson, D. Xia and A.Z. Siddiki.  Departments of Pre-Clinical Veterinary Science & Veterinary Pathology, University of Liverpool, Crown Street, Liverpool, United Kingdom L69 7ZJ<br>


[MurrayMassSpecPeptides]
feature      = domain:MurrayMassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/conoid-enriched/i) && return 'maroon';
                     ($extdbname =~ m/conoid-depleted/i) && return 'darksalmon';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = 1 
description  = 0 
link  =  javascript:void(0)
link_target  = sub {  my $f = shift;
                      my ($desc) = $f->get_tag_values('Description');
                      $desc =~ s/[\r\n]/<br>/g;
                      my ($seq) =  $f->get_tag_values('PepSeq');
                      my @data;
                      push @data, [ '' => "sequence:$seq<br>$desc" ];
                      hover('', \@data);
                   }
label      = 0
key          = Mass Spec Peptides (Hu, et al.)
citation  =  Hu K, Johnson J, Florens L, Franholz M, Suravajjala S, 
       DiLullo C, Yates JR, Roos DS, Murray JM. (2006) 
       Cytoskeletal Components of an Invasion Machine - The Apical Complex of Toxoplasma gondii. 
       PLoS Pathog <b>2</b>:121-138.


[EinsteinMassSpecPeptides]
feature      = domain:EinsteinMassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/1-d/i) && return 'mediumslateblue';
                     ($extdbname =~ m/mudpit/i) && return 'black';
                     ($extdbname =~ m/rhoptry/i) && return 'cadetblue';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = -1 
description  = 0 
link  =  javascript:void(0)
link_target  = sub {  my $f = shift;
                      my ($desc) = $f->get_tag_values('Description');
                      $desc =~ s/[\r\n]/<br>/g;
                      my ($seq) =  $f->get_tag_values('PepSeq');
                      my @data;
                      push @data, [ '' => "sequence:$seq<br>$desc" ];
                      hover('', \@data);
                   }
label      = 0
key          = Mass Spec Peptides (Einstein, et al.)

[CarruthersMassSpecPeptides]
feature      = domain:CarruthersMassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/1-d/i) && return 'mediumslateblue';
                     ($extdbname =~ m/mudpit/i) && return 'black';
                     ($extdbname =~ m/rhoptry/i) && return 'cadetblue';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = -1 
description  = 0 
link  =  javascript:void(0)
link_target  = sub {  my $f = shift;
                      my ($desc) = $f->get_tag_values('Description');
                      $desc =~ s/[\r\n]/<br>/g;
                      my ($seq) =  $f->get_tag_values('PepSeq');
                      my @data;
                      push @data, [ '' => "sequence:$seq<br>$desc" ];
                      hover('', \@data);
                   }
label      = 0
key          = Mass Spec Peptides (Carruthers, et al.)

[MorenoMassSpecPeptides]
feature      = domain:MorenoMassSpecPeptides
glyph        = segments
font2color   = black
fgcolor      = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/sample A/i) && return 'mediumslateblue';
                     ($extdbname =~ m/sample G/i) && return 'cadetblue';
                     return 'yellow';
                   }
height       = 5
pad_bottom   = -1 
description  = 0 
link  =  javascript:void(0)
link_target  = sub {  my $f = shift;
                      my ($desc) = $f->get_tag_values('Description');
                      $desc =~ s/[\r\n]/<br>/g;
                      my ($seq) =  $f->get_tag_values('PepSeq');
                      my @data;
                      push @data, [ '' => "sequence:$seq<br>$desc" ];
                      hover('', \@data);
                   }
label      = 0
key          = Mass Spec Peptides (Moreno, et al.)


[InterproDomains]
feature      = domain:interpro
glyph        = segments
font2color   = black
bgcolor      = lightslategray
height       = 8 
title        = sub {
                 my $f = shift;
                 my $name = $f->name;
                 my ($desc) = $f->get_tag_values("Note");
                 my ($db) = $f->get_tag_values("Db");
                 my ($url) = $f->get_tag_values("Url");
                 my ($evalue) = $f->get_tag_values("Evalue");
                 $evalue = sprintf("%.2E", $evalue);
                 my @data;
                 push @data, [ 'Accession:'  => $name ];
                 push @data, [ 'Description:' => $desc ];
                 push @data, [ 'Database:'  => $db ];
                 push @data, [ 'Coordinates:' => $f->start . ' .. ' . $f->end ];
                 push @data, [ 'Evalue:' => $evalue ];
                 hover("InterPro Domain: $name", \@data);
               }
description  = 1
label        = 1
link         = sub {
                 my $f = shift;
                 my ($url) = $f->get_tag_values("Url");
                 return $url;
               }
key          = InterPro Domains
citation     = InterPro domains

[SignalP]
feature      = domain:SignalP
glyph        = segments
font2color   = black
bgcolor      = navy
height       = 8 
title        = sub {
                 my $f = shift;
                 my @data;
                 my ($d_score) = $f->get_tag_values("DScore");
                 my ($signal_prob) = $f->get_tag_values("SignalProb");
                 my ($conclusion_score) = $f->get_tag_values("ConclusionScore");
                 push @data, [ 'Coordinates:' => $f->start . ' .. ' . $f->end ];
                 push @data, [ 'NN Conclusion Score:' => $conclusion_score ];
                 push @data, [ 'NN D-Score:' => $d_score ];
                 push @data, [ 'HMM Signal Probability:' => $signal_prob ];
                 hover("Signal peptide", \@data);
         }
label        = 0
description  = 0
key          = Signal Peptide
citation     = Signal peptide predictions by SP-HMM/SP-NN

[TMHMM]
feature      = domain:TMHMM
glyph        = segments
font2color   = black
bgcolor      = navy
height       = 8 
title        = sub {
                 my $f = shift;
                 my $name = $f->name;
                 my ($desc) = $f->get_tag_values("Topology");
                 my @data;
                 push @data, [ 'Name:'  => $name ];
                 push @data, [ 'Topology:' => $desc ];
                 push @data, [ 'Coordinates:' => $f->start . ' .. ' . $f->end ];
                 hover("Transmembrane Domain", \@data);
         }
label        = 0
description  = 0
key          = Transmembrane Domains
citation     = Transmembrane domains detected by TmHMM

[HydropathyPlot]
glyph        = protein
global feature = 1
height       = 40
do_kd        = 1
fgcolor      = red
axis_color   = blue
citation     = Kyte-Doolittle hydropathy plot

[BLASTP]
feature      = match:BLASTP
glyph        = graded_segments
font2color   = black
bgcolor      = wheat
title        = sub {
                 my $f = shift;
                 my $name = $f->name;
                 my ($desc) = $f->get_tag_values("Note");
                 $desc ||= "<i>unavailable</i>";
                 $desc =~ s/\001.*//;
                 my @data;
                 push @data, [ 'Name:'  => $name ];
                 push @data, [ 'Description:' => $desc ];
                 push @data, [ 'Expectation:' => $f->get_tag_values("Expect") ];
                 push @data, [ '% Identical:' => sprintf("%3.1f", $f->get_tag_values("PercentIdentity")) ];
                 push @data, [ '% Positive:' => sprintf("%3.1f", $f->get_tag_values("PercentPositive")) ];
                 push @data, [ 'Coordinates:' => $f->start . ' .. ' . $f->end ];
                 hover("BLASTP hit: $name", \@data);
               }
description  = 1
label        = 0
link         = http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val=$name
key          = BLASTP Hits
citation     = BLASTP Hits

[LowComplexity]
feature      = lowcomplexity:seg
glyph        = segments
bgcolor      = grey
height       = 6
title        = sub {
                 my $f = shift;
                 my @data;
                 my ($sequence) = $f->get_tag_values("Sequence");
                 push @data, [ 'Coordinates:' => $f->start . '..' . $f->end ];
                 push @data, [ 'Sequence:'  => $sequence ];
                 hover("Low complexity", \@data);
               }
description  = 0
label        = 0
link         = ""
key          = Low Complexity Regions
citation     = Regions of low sequence complexity, as defined by the
