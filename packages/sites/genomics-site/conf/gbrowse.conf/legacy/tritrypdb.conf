[GENERAL]
description   = TriTrypDB
db_adaptor    = DAS::GUS
db_args       = sub {
                 use ApiCommonWebsite::Model::ModelConfig;
                 use ApiCommonWebsite::Model::DbUtils;
                 my $c = new ApiCommonWebsite::Model::ModelConfig('TriTrypDB');
                 my $resolvedDsn = ApiCommonWebsite::Model::DbUtils->resolveOracleDSN($c->appDb->dbiDsn);
                   { -sqlfile => $ENV{DOCUMENT_ROOT}.'/../conf/gbrowse.conf/tritrypdb.xml',
                     -dsn     => $resolvedDsn,
                       -user    => $c->appDb->login,
                       -pass    => $c->appDb->password,
                   }
                 }

search_instructions =

#plugins = AttributeHiliter 
plugins = BatchDumper FastaDumper GFFDumper RestrictionAnnotator

# 'region' or 'contig' would be other typical choices,
# remember that in chado, the ref class must be part of 
# SOFA (as must all feature types)
# reference class  = chromosome
# Note: reference class is very importment !!!
reference class  = contig

# for better display of comparative genome data
#postgrid    = 1
background  = 1
grid        = 0

# Web site configuration info
stylesheet  = /include/gbrowse.css
buttons     = /gbrowse/images/buttons

tmpimages   = /gbrowse/tmp
# using full url breaks under mod_perl.  Bio::Graphics::Browser calls lookup_uri()
# on it.
#tmpimages   = http://tritrypdb.org/gbrowse/tmp /var/www/tritrypdb.org/html/gbrowse/tmp 

# 24hrs/day * 360 days
image cachetime   = 8760

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 250
bump density  = 2000

show sources = 0
default varying = 1 # tracks appear as defined below, not in alphabetical order

# where to link to when user clicks in detailed view
link        =

# what image widths to offer
image widths  = 640 800 1024 1280
# default width of detailed view (pixels)
default width = 800 
default features = Gene EST 

# max and default segment sizes for detailed view
max segment     = 2000000
default segment = 50000

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000 20000 30000 40000 60000 100000 200000 500000 1000000 2000000

# colors of the overview, detailed map and key
overview bgcolor = lightgrey
detailed bgcolor = lightgoldenrodyellow
key bgcolor      = beige

# examples to show in the introduction
examples = Tb927_02_v4:1-55000
           LmjF05.1010

# "automatic" classes to try when an unqualified identifier is given
automatic classes = gene

language = en

#empty_tracks = suppress
upload_tracks section = on

### HTML TO INSERT AT VARIOUS STRATEGIC LOCATIONS ###
# inside the <head></head> section
head = <script type='text/javascript' src='/tritrypdb/js/newwindow.js'></script> 
       <link rel="stylesheet" href="/include/style.css" type="text/css">
       <style type="text/css">
         BODY { margin-left:10px; margin-right:10px; margin-top:5px}
       </style>

# at the top...
header = <!--#include virtual='/a/header.jsp'--> 
footer = <hr><!--#include virtual='/a/footer.jsp' -->


# Various places where you can insert your own HTML -- see configuration docs
html1 = <script type="text/javascript" src="/gbrowse/apiGBrowsePopups.js"></script>
html2 = 
html3 = 
html4 = 
html5 = 
html6 = <script type="text/javascript" src="/gbrowse/wz_tooltip.js"></script>

init_code = use vars qw($CGI_OR_MOD);
            #$CGI_OR_MOD =  'cgi-bin';
            $CGI_OR_MOD =  'mod-perl';
            # group writable tmp files
            umask 0002;
            sub hover { 
              use HTML::Template; 
              my ($name, $data) = @_; 
              my $tmpl = HTML::Template->new(filename => $ENV{DOCUMENT_ROOT}.'/gbrowse/hover.tmpl'); 
              $tmpl->param(DATA => [ map { { Key => $_->[0], Value => $_->[1], } } @$data ]); 
              my $str = $tmpl->output; 
              $str =~ s/'/\\'/g;
              $str =~ s/\"/&quot;/g;
              $str =~ s/\s+$//; 
              $str =~ s/\\n//; 
              my $cmd = "this.T_STICKY=true;this.T_TITLE='$name'"; 
              #return "$cmd;return escape('$str')"; 
              $cmd = qq{" onmouseover="$cmd;return escape('$str') };
           }

 sub synSpanTitle {
                 my $f = shift;
     my $name = $f->name;
     my $chr = $f->seq_id;
     my $loc = $f->location->to_FTstring;
                 my $strand = $f->strand == 1? "no" : "yes";
     my ($refStart) = $f->get_tag_values("RefStart");
     my ($refEnd) = $f->get_tag_values("RefEnd");
     my ($refLength) = $refEnd - $refStart;
     my ($synStart) = $f->get_tag_values("SynStart");
     my ($synEnd) = $f->get_tag_values("SynEnd");
     my ($synLength) = $synEnd - $synStart;
     my ($contigLength) = $f->get_tag_values("ContigLength");
     my ($refContigLength) = $f->get_tag_values("RefContigLength");
     my ($contigSourceId) = $f->get_tag_values("Contig");
     my ($chromosome) = $f->get_tag_values("Chromosome");
     my @data;
     push @data, [ 'Chromsome: '=> "$chromosome" ] if ($chromosome);
                 push @data, [ 'Syntenic Contig: ' => "$contigSourceId" ];
     push @data, [ 'Ref location: ' => "$refStart&nbsp;-&nbsp;$refEnd ($refLength&nbsp;bp)" ];
     push @data, [ 'Syn location: ' => "$synStart&nbsp;-&nbsp;$synEnd ($synLength&nbsp;bp)" ];
     push @data, [ 'Reversed: ' => "$strand" ];
     push @data, [ 'Total Syn Contig Length: ' => "$contigLength" ];
     push @data, [ 'Total Ref Contig Length: ' => "$refContigLength" ];
     hover("Synteny Span", \@data);
         }
 sub synSpanLink { 
     my $f = shift;
     my $name = $f->name;
     my ($start) = $f->get_tag_values("SynStart");
     my ($end) = $f->get_tag_values("SynEnd");
     "/cgi-bin/gbrowse/tritrypdb/?name=$name:$start..$end";
 }
 sub synGeneTitle{
                 my $f = shift;
     my $name = $f->name;
     my $chr = $f->seq_id;
     my $loc = $f->location->to_FTstring;
     my ($desc) = $f->get_tag_values("Note");
     my ($taxon) = $f->get_tag_values("Taxon");
        my ($isPseudo) = $f->get_tag_values("IsPseudo");
     my ($contig) = $f->get_tag_values("Contig");
     my ($soTerm) = $f->get_tag_values("SOTerm");
     my ($start) = $f->get_tag_values("Start");
     my ($end) = $f->get_tag_values("End");
           $soTerm =~ s/\_/ /g;
           $soTerm =~ s/\b(\w)/\U$1/g;
     my @data;
     push @data, [ 'Species:' => $taxon ];  
     push @data, [ 'Name:'  => $name ];
     push @data, [ 'Gene Type:' => ($isPseudo ? "Pseudogenic " : "") . $soTerm  ];
     push @data, [ 'Description:' => $desc ];
     push @data, [ 'Location:'  => "$contig: $start - $end" ];
     hover("Syntenic Gene: $name", \@data);
         }
postgrid     = sub { use DAS::Util::SynView;
                     return DAS::Util::SynView::postgrid(@_); }

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

###################################
# Plugin configuration
###################################

[Contigs:overview]
feature      = contig:Tcruzi
glyph        = arrow
label        = 0
description  = 0
direction    = strand
tick         = 2
ruler        = 1
linewidth    = 2
height       = 8
arrowstyle   = regular
connector_color = white
relative_coords = 1
fgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "orange" : "darkseagreen";
               }
linewidth    = 2
key          = Contigs (T. cruzi only)
citation =<b>Contigs displayed on the entire chromosome.</b> <br> <i>Forward contigs are in orange, reverse ones in green.</i><br><br> 

[Gene]
feature     = gene:Genbank 
glyph       = processed_transcript
category    = 1. Gene Models
bgcolor     = sub { my $f = shift;
                    my $strand = $f->strand;
                    $f->strand > 0 ? "lightblue" : "red";
             }
fgcolor     = sub { my $f = shift;
                    my $strand = $f->strand;
                    $f->strand > 0 ? "blue" : "darkred";
             }
font2color  = black
height        = 8 
description   = 0
#bump density  = 100
label density = 100
link          =  /gene/$name
link_target   = sub { my $f = shift;
         my $name = $f->name; 
         my $start = $f->start; 
         my $end = $f->end; 
         my $length = $end - $start + 1;
         my $gi = $f->get_tag_values('Dbxref'); 
         my ($desc) = $f->get_tag_values('Note');
         my ($type) = $f->get_tag_values('soTerm');
         my $cds = qq(<a href=/cgi-bin/geneSrt?project_id=TriTrypDB&ids=$name&type=CDS&upstreamAnchor=Start&upstreamOffset=0&downstreamAnchor=End&downstreamOffset=0&go=Get+Sequences>CDS</a>);
         my $protein = qq(<a href=/cgi-bin/geneSrt?project_id=TriTrypDB&ids=$name&type=protein&upstreamAnchor=Start&upstreamOffset=0&downstreamAnchor=End&downstreamOffset=0&go=Get+Sequences>Protein</a>);
         my @data; 
         push @data, [ 'Locus:' => $name ]; 
         push @data, [ 'Type:' => $type ]; 
         push @data, [ 'Location:' => "$start - $end" ]; 
         push @data, [ 'Length:' => $length ];
         push @data, [ 'Function:' => $desc ];
         push @data, [ 'Download:' => $cds. ' | '. $protein . ' in a new window.'];
         '' . hover( "Annotated Gene $name", \@data);
      }
label      = 1
preset     = Annotation
key        = Annotated Genes
citation   = Annotated gene track shows protein coding genes, rRNA and tRNA genes. Blue color indicates the gene is on forward strand. Red color indicates the gene is on reversed strand.

[Contigs]
feature      = contig:Tcruzi
category     = Analysis
glyph        = arrow
label        = 1
description  = 0
tick         = 2
direction    = strand
ruler        = 1
linewidth    = 2
height       = 8
arrowstyle   = regular
relative_coords = 1
connector_color = white
fgcolor      = sub {
                 my $f = shift;
                 $f->strand == +1 ? "orange" : "darkseagreen";
               }
link          = javascript:void(0)
link_target     = sub { my $f = shift;
                  my $name = $f->name;
                  my $chr  = $f->seq_id;
                  my $loc  = $f->location->to_FTstring;
                  my $orient   = $f->strand eq '-1' ? "reverse" : "forward";
                  my ($length) = $f->get_tag_values("Length");
                  my ($type) = $f->get_tag_values("Type");
                  my $start = $f->start;
                  my $stop = $f->stop;
                  my @data;
                  push @data, [ 'Name:'    => $name ]; 
                  push @data, [ 'Length:'  => $length ];
                  push @data, [ 'Orientation:' => "$orient" ]; 
                  push @data, [ 'Location:' => "$start..$stop" ];
                  hover('Contig', \@data);
                }
key       = Contigs in Current View (T. cruzi only)
citation  = <b>Contigs displayed in the current view.</b> <br> <i>Forward contigs are in orange, reverse ones in green.</i><br><br>

[TarletonMassSpecPeptides]
feature      = domain:TarletonMassSpecPeptides
category     = 2. Protein Expression Evidence
glyph        = segments
font2color   = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                    ($extdbname =~ m/Amastigote/i) && return 'mediumslateblue';
                    ($extdbname =~ m/Epimastigote/i) && return 'black';
                    ($extdbname =~ m/Metacyclic/i) && return 'brown';
                    ($extdbname =~ m/Trypomastigote/i) && return 'green';
                    return 'yellow';
                    }
fgcolor =  bgcolor
height       = sub {
   my $f = shift;
   $f = $f->parent if (! $f->get_tag_values('Count'));
   my ($count) = $f->get_tag_values("Count"); 
   return ($count/2)+8;  # 8 for single hit, and increment by 1 for every additional 2 hits
 }
pad_bottom   = -1
description  = 0
link         =  javascript:void(0)
title        = sub {}
link_target  = sub {  my $f = shift;
    my ($count) = $f->get_tag_values('Count');
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>Number of matches:$count" ];
    hover('', \@data);
         }
label      = 0
key       =T. cruzi MS/MS Peptides (Tarleton, et al.)
citation  = Protein expression evidence from different stages of <i>T. cruzi</i> provided by <a href="http://paige.cb.uga.edu/">Rick Tarleton's group</a> at the University of Georgia, Atehns, Georgia.
  The Center for Tropical and Emerging Global Diseases, University of Georgia, Athens, GA<br>
  <b> Color legend: Amastigote stage - blue; Epimastigote stage - black; Metacyclic 
  stage - brown; Trypomastigote stage - green  </b>.

[ZilbersteinMassSpecPeptides]
feature      = domain:ZilbersteinMassSpecPeptides
category     = 2. Protein Expression Evidence
glyph        = segments
font2color   = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                    ($extdbname =~ m/acetylation/i) && return 'mediumslateblue';
                    ($extdbname =~ m/methylation/i) && return 'black';
                    ($extdbname =~ m/glycosylation/i) && return 'brown';
                    ($extdbname =~ m/phosphorylation/i) && return 'green';
                    return 'yellow';
                    }
fgcolor =  bgcolor
height       = sub {
   my $f = shift;
   $f = $f->parent if (! $f->get_tag_values('Count'));
   my ($count) = $f->get_tag_values("Count"); 
   return ($count/2)+8;  # 8 for single hit, and increment by 1 for every additional 2 hits
 }
pad_bottom   = -1
description  = 0
link         =  javascript:void(0)
title        = sub {}
link_target  = sub {  my $f = shift;
    my ($count) = $f->get_tag_values('Count');
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>Number of matches:$count" ];
    hover('', \@data);
         }
label      = 0
key       = L. infantum MS/MS Peptides (Rosenzweig et. al.)
citation  = This data represents peptides with post-translational modifications as described by <a href="http://www.ncbi.nlm.nih.gov/pubmed/18398879">Rosenzweig <i>et. al.</i></a>.<br>Technion Institute of Technology, Haifa 32000, Israel E-mail: danz@tx.technion.ac.il<br><b> Color legend: acetylation - blue; methylation - black; glycosylation - brown; phosphorylation - green 
				 </b>.

[StuartMassSpecPeptides]
feature      = domain:StuartMassSpecPeptides
category     = 2. Protein Expression Evidence
glyph        = segments
font2color   = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/procyclic/i) && return 'yellow';
                     return 'yellow';
                    }
fgcolor =  bgcolor
height       = sub {
   my $f = shift;
   $f = $f->parent if (! $f->get_tag_values('Count'));
   my ($count) = $f->get_tag_values("Count"); 
   return ($count/2)+8;  # 8 for single hit, and increment by 1 for every additional 2 hits
 }
pad_bottom   = -1
description  = 0
link         =  javascript:void(0)
title        = sub {}
link_target  = sub {  my $f = shift;
    my ($count) = $f->get_tag_values('Count');
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>Number of matches:$count" ];
    hover('', \@data);
         }
label        = 0
key       = T. brucei MS/MS Peptides (Panigrahi, et. al.)
citation  =  MS/MS analysis of <i>T. brucei</i> proteins from procyclic form (PF) and a mitochondrial enriched fraction.  This data was provided by Kenneth Stuart and Aswini Panigrahi at the Seattle Biomedical Research Institute, Seattle, Washington. Additional informations regarding this study may be accessed <a href="http://www.ncbi.nlm.nih.gov/pubmed/19105172">here</a>. This data may also be accessed <a href="http://www.trypsproteome.org">here</a>.<br>Seattle Biomedical Research Institute, 307 Westlake Ave N, Suite 500, Seattle, WA 98109, USA.  E-mail: ken.stuart@sbri.org
				 </b>.

[BrothertonMassSpecPeptides]
feature      = domain:BrothertonMassSpecPeptides
category     = 2. Protein Expression Evidence
glyph        = segments
font2color   = black
bgcolor      = sub { my $f = shift;
                     $f = $f->parent if (! $f->get_tag_values('ExtDbName'));
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     ($extdbname =~ m/Amastigote/i) && return 'mediumslateblue';
                     ($extdbname =~ m/Promastigote/i) && return 'brown';
                     return 'yellow';
                    }
fgcolor =  bgcolor
height       = sub {
   my $f = shift;
   $f = $f->parent if (! $f->get_tag_values('Count'));
   my ($count) = $f->get_tag_values("Count"); 
   return ($count/2)+8;  # 8 for single hit, and increment by 1 for every additional 2 hits
 }
pad_bottom   = -1
description  = 0
link         =  javascript:void(0)
title        = sub {}
link_target  = sub {  my $f = shift;
    my ($count) = $f->get_tag_values('Count');
    my ($seq) =  $f->get_tag_values('PepSeq');
                my ($extdbname) = $f->get_tag_values('ExtDbName');
    my @data;
    push @data, [ '' => "$extdbname<br>sequence:$seq<br>Number of matches:$count" ];
    hover('', \@data);
         }
label        = 0
key          = L. infantum MS/MS Peptides (Ouellette, et al.)
citation     = Evidence of protein expression in <i>L. infantum</i> from <a href="http://www.mcgill.ca/chpi/members/ouellette/">Marc Ouellette's group</a> at the McGill Centre for Host-Parasite Interactions, Montreal, Quebec, Canada.<br><i>L. infantum</i> mass spec results were also mapped against other <i>Leishmania</i> species.<br><b>Color legend: Amastigote-blue; Promastigote-brown.</b>

[UnifiedMassSpecPeptides]
feature      = domain:UnifiedMassSpecPeptides
category     = 2. Protein Expression Evidence
glyph        = segments
#font2color   = black
#fgcolor =  black
bgcolor =  sub {
   my $f = shift;
#   $f = $f->parent if (! $f->get_tag_values('score'));
   my ($count) = $f->get_tag_values("score"); 
   return 'red' if ($count > 50); #darkgray
   return 'blue' if ($count > 25 );
   return 'green' if ($count > 10 );
   return 'gray'; #antiquegray
   }
height       = 10
bump density = 1
label        = 0
key          = Protein Expression Abundance

[BLASTX]
feature      = match:WU_BLASTX
glyph        = graded_segments
height       = 6 
label         = 0
stranded     = 1
bump density = 400
bump_limit   = 10
link         = http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val=$name
link_target      = sub {
           my $f = shift; 
          my $name = $f->name; 
          my ($desc) = $f->get_tag_values("Defline");
          my ($evalue) = $f->get_tag_values('Expect');
          my $score = $f->score; 
          my ($tstart) = $f->get_tag_values('TStart');
          my ($tstop )= $f->get_tag_values('TStop');
          my ($pctI) = $f->get_tag_values("PercentIdentity");
          my $link = qq(<a href=http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val=$name>$name</a>); 
          my @data; 
          push @data, [ 'Name:' => $name ]; 
          push @data, [ 'E-value:' => $evalue ]; 
          push @data, [ 'Score:' => $score ]; 
          push @data, [ 'Location:' => "$tstart - $tstop"]; 
          push @data, [ 'Identity:'  => $pctI ." %"];
          push @data, [ 'Function:' => $desc ]; 
          hover( "$name", \@data); 
        }
bgcolor     = sub { 
          my $f = shift; 
          my $strand = $f->strand; 
          if($strand eq '+1') { 
            return 'navy'; 
          } else { 
            return 'maroon';
            }
        }
key          = BLASTX Alignments
category     = 1. Gene Models
citation     = Genomic sequences were used as queries in BLASTX searches against NCBI's non-redundant protein database (NRDB).

[ORF]
feature      = alignment:ORF
category     = 6. Nucleotide Analysis
glyph        = cds
height       = 12
key          = ORF >/= 150 nucleotides (50 amino acids)
stranded     = 1
bgcolor      = sub {
                 my ($f, undef, undef, undef, $glyph) = @_;
                 my $flip = $glyph->{flip};
                 $f->strand == ($flip ? -1 : 1) ? "navy" : "maroon";
               }
fgcolor      = black
description  = 0
label       = 0
bump_limit  = 10
link        =  sub { my $f = shift;
                    my $name = $f->name;
                    my $link = "/tritrypdb/showRecord.do?name=OrfRecordClasses.OrfRecordClass&project_id=TriTrypDB&primary_key=$name";
                    return $link;
                  }
link_target        = sub {
                 my $f = shift;
                 my $name = $f->name;
                 my $start  = $f->start; 
                 my $stop   = $f->stop; 
                 my @data; 
                 push @data, [ 'Name:'   => $name ]; 
                 push @data, [ 'Start:'  => $start ]; 
                 push @data, [ 'Stop:'   => $stop ]; 
                 push @data, [ 'Length:' => abs($stop - $start) . ' nt' ]; 
                 return hover( 'ORFs >= 50 nt', \@data); 
               } 
citation     = ORFs greater than 150nt, generated by TriTrypDB. 

[EST]
feature      = alignment:EST
glyph        = segments
bgcolor       = lightskyblue
fgcolor       = blue
description  = 0
label        = 0
height       = 8
link          = sub { my $f = shift;
                     my $name = $f->name;
                     return "/tritrypdb/showRecord.do?name=EstRecordClasses.EstRecordClass&id=$name";
               }
link_target  = sub {
                 my $f = shift;
                 my $name = $f->name;
                 my $start  = $f->start; 
                 my $stop   = $f->stop; 
                 my $score  = $f->score; 
                 #my ($direction)  = $f->get_tag_values('Direction'); 
                 my ($percent_identity) = $f->get_tag_values("PercentIdentity");
                 my @data; 
                 push @data, [ 'Name:'   => $name ]; 
                 push @data, [ 'Location:' => "$start..$stop" ]; 
                 push @data, [ 'Length:' => abs($stop - $start) . ' nt' ]; 
                 push @data, [ 'Score:' => $score ]; 
                 #push @data, [ 'Direction:' => $direction ]; 
                 push @data, [ 'Percent Identity:' => $percent_identity ]; 
                 return hover( "EST $name", \@data); 
               } 
category     = 3. Transcript Expression Evidence
preset       = Annotation
key          = EST Alignments
citation     = Expressed sequence tags (ESTs) were obtained from dbEST and aligned to chromosomes.

[Cosmids]
feature      = alignment:Cosmids
category     = Analysis
glyph        = segments
bgcolor      = navy
description  = 0
height       = 6
link         = javascript:void(0)
link_target  = sub { my $f = shift;
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my $length = $stop - $start;
                     my $cname = $f->name;
                     my @data; 
                     push @data, [ 'Clone Size:'     => $length ]; 
                     push @data, [ 'Clone Location:' => "$start..$stop"];
                     push @data, [ '<hr>'            => '<hr>' ];
                     my @subs = $f->sub_SeqFeature;
                     my $count = 0;
                     foreach(@subs) {
                       $count++;
                       my $name  = $_->name; 
                       my $start = $_->start;
                       my $stop  = $_->stop;
                       my ($pct) = $_->get_tag_values("pct");
                       push @data, [ 'Cosmid End:'      => $name ]; 
                       push @data, [ 'Location:'  => "$start..$stop" ];
                       push @data, [ 'Percent Identity:' => "$pct %" ]; 
                       push @data, [ 'Score:' => $_->score ]; 
                       push @data, [ '<hr>' => '<hr>' ] if $count % 2;
                     }
                     hover("End-Sequenced Cosmid: $cname", \@data);
               }
lable = 1
#bump_limit   = 50
#label density = 200
key          = End-Sequenced Cosmids (L. major)
citation     = Cosmid end-sequences were provided by the GeneDB project at the Sanger Institute Pathogen Sequencing Unit.

[Bacs]
feature      = alignment:Bacs
category     = Analysis
glyph        = segments
bgcolor      = sub { my $f = shift;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     if ($extdbname =~ m/PAC/) { 
                       return 'green';
                     } else {
                       return 'orange';
                     }
                  }
description  = 0
height       = 10
stranded     = 0
link         = javascript:void(0)
link_target  = sub { my $f = shift;
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my $length = $stop - $start;
                     my $cname = $f->name;
                     my ($extdbname) = $f->get_tag_values('ExtDbName');
                     my $type = ($extdbname =~ m/BAC/)? 'BAC' : 'PAC'; 
                     my @data; 
                     push @data, [ 'Clone Size:'     => $length ]; 
                     push @data, [ 'Clone Location:' => "$start..$stop"];
                     push @data, [ '<hr>'            => '<hr>' ];
                     my @subs = $f->sub_SeqFeature;
                     my $count = 0;
                     foreach(@subs) {
                       $count++;
                       my $name  = $_->name; 
                       my $start = $_->start;
                       my $stop  = $_->stop;
                       my ($pct) = $_->get_tag_values("pct");
                       push @data, [ $type. ' End:'      => $name ]; 
                       push @data, [ 'Location:'  => "$start..$stop" ];
                       push @data, [ 'Percent Identity:' => "$pct %" ]; 
                       push @data, [ 'Score:' => $_->score ]; 
                     }
                     hover("End-Sequenced $type: $cname", \@data);
               }
bump_limit   = 50
key          = End-Sequenced BACs and PACs (Multiple Species)
citation     = <i>L. major</i>, <i>T. brucei</i> (RPCI93) and <i>T. cruzi</i> (CHORI105) BAC end-sequence, and <i>L. major</i> PAC end-sequences -- mapped against their respective genomes.  End-sequences were provided by the GeneDB project at the Sanger Institute Pathogen Sequencing Unit.

[RandomEnds]
feature      = alignment:RandomEnds
category     = Analysis
glyph        = segments
bgcolor      = yellow
description  = 0
height       = 10
stranded     = 0
link         = javascript:void(0)
link_target  = sub { my $f = shift;
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my $length = $stop - $start;
                     my $cname = $f->name;
                     my @data; 
                     push @data, [ 'Clone Size:'     => $length ]; 
                     push @data, [ 'Clone Location:' => "$start..$stop"];
                     push @data, [ '<hr>'            => '<hr>' ];
                     my @subs = $f->sub_SeqFeature;
                     my $count = 0;
                     foreach(@subs) {
                       $count++;
                       my $name  = $_->name; 
                       my $start = $_->start;
                       my $stop  = $_->stop;
                       my ($pct) = $_->get_tag_values("pct");
                       push @data, [ 'Random End:'      => $name ]; 
                       push @data, [ 'Location:'  => "$start..$stop" ];
                       push @data, [ 'Percent Identity:' => "$pct %" ]; 
                       push @data, [ 'Score:' => $_->score ]; 
                     }
                     hover("Random End: $cname", \@data);
               }
bump_limit   = 50
key          = End-Sequenced Random Ends (L. major)
citation     = <i>L. major</i> FV1 random end-sequences provided by the GeneDB project at the Sanger Institute Pathogen Sequencing Unit.

[LowComplexity]
feature      = lowcomplexity:dust
category     = 6. Nucleotide Analysis
glyph        = segments
bgcolor      = grey
height       = 6
description  = 0
label        = 0
link         = 
key          = Low Complexity Regions
citation     = Regions of low sequence complexity, as defined by the
               <code>dust</code> algorithm

[TandemRepeat]
feature      = TandemRepeat:TRF
category     = 6. Nucleotide Analysis
glyph        = segments
bgcolor      = darkgrey
height       = 6
description  = 0
label        = 0
link         = 
key          = Tandem Repeats
citation     = Regions of tandem repeats, as defined by the
               <code>Tandem Repeats Finder</code> program by Gary Benson
[Frames]
feature      = gene:Genbank
category     = 6. Nucleotide Analysis
glyph        = cds
frame0f      = cadetblue
frame1f      = blue
frame2f      = darkblue
frame0r      = darkred
frame1r      = red
frame2r      = crimson
height       = 20
link     = 
label      = 
description  = 0
key          = Frame Usage
citation     = Glyphs in this track indicate which reading frame is used.  Shades of red indicate a right to left direction while shades of blue indicate a left to right direction.  

[TranslationF]
glyph        = translation
category     = 6. Nucleotide Analysis
global feature = 1
frame0       = cadetblue
frame1       = blue
frame2       = darkblue
height       = 40
fgcolor      = purple
strand       = +1
translation  = 3frame
link        =
key          = 3-frame translation (forward) 
citation     = This draws three frame conceptutal translations of the forward strands. At low magnifications (zoomed way out), this track draws littel symbols indicating where start and stop codons are. At high magnifications, the actual amino acid sequence comes into view. <br /><br /> Frame +1: cadetblue <br />Frame +2: blue <br />Frame +3: darkblue

[TranslationR]
glyph        = translation
category     = 6. Nucleotide Analysis
global feature = 1
frame0       = darkred
frame1       = red
frame2       = crimson
height       = 40
fgcolor      = blue
strand       = -1
link        =
translation  = 3frame
key          = 3-frame translation (reverse)
citation     = This draws three frame conceptutal translations of the reverse strand. At low magnifications (zoomed way out), this track draws littel symbols indicating where start and stop codons are. At high magnifications, the actual amino acid sequence comes into view. <br /><br />Frame -1: darkred<br />Frame -2: red<br />Frame -3: crimson<br />

[DNA/GC Content]
glyph          = dna
category       = 6. Nucleotide Analysis
global feature = 1
height         = 40
do_gc          = 1
link           =
fgcolor        = red
axis_color     = blue
citation       = This displays a GC content graph of the reference sequence at low magnifications and the DNA sequence itself at higher magnifications. GC content is calculated based on a sliding window set at 100 nucleotides.

[AnnotationDensity]
feature      = annotation:density
category     = 1. Gene Models
glyph        = xyplot
graph_type   = boxes
bump density = 1
scale        = right
#scale       = both
bgcolor      = lightslategray
fgcolor      = blue
height       = 60
min_score    = 0
label        = 0
key          = Gene Density
citation     = <b>Density plot of annotated genes displayed on the entire chromosome.</b><br><br>This was caluclated by counting the number of genes in 50,000 base pair (50Kb) intervals. So each bar represents the number of genes (y axis = number of genes) in that 50Kb region of the chromosome.

[SyntenySpansTCruziSMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 my ($contig) = $f->get_tag_values("Contig");
                 $taxon eq qq /Trypanosoma cruzi strain CL Brener/ && $contig =~ /-S$/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = T. cruzi esmeraldo genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>T. cruzi</i> esmeraldo.

[SyntenyGenesTCruziSMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 my ($contig) = $f->get_tag_values("Contig");
                 $taxon eq qq /Trypanosoma cruzi strain CL Brener/ && $contig =~ /-S$/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = T. cruzi esmeraldo Syntenic Genes
citation     = Genes found within syntenic spans.


#################################################

[SyntenySpansTCruziPMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 my ($contig) = $f->get_tag_values("Contig");
                 $taxon eq qq /Trypanosoma cruzi strain CL Brener/ && $contig !~ /-S$/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = T. cruzi non-esmeraldo genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>T. cruzi</i> non-esmeraldo.  NOTE: This track also includes contigs which were not assigned to esmeraldo or non-esmeraldo

[SyntenyGenesTCruziPMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 my ($contig) = $f->get_tag_values("Contig");
                 $taxon eq qq /Trypanosoma cruzi strain CL Brener/ && $contig !~ /-S$/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = T. cruzi non-esmeraldo Syntenic Genes.  
citation     = Genes found within syntenic spans. NOTE:  This track also contains genes on contig which were not assigned to esmeraldo or non-esmeraldo.

#################################################

[SyntenySpansTBruceiMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Trypanosoma brucei TREU927/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = T. brucei genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>T. brucei</i>.

[SyntenyGenesTBruceiMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Trypanosoma brucei TREU927/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = T. brucei Syntenic Genes
citation     = Genes found within syntenic spans.

#################################################

[SyntenySpansLBraziliensisMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania braziliensis/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = L. braziliensis genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>L. braziliensis</i>.

[SyntenyGenesLBraziliensisMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania braziliensis/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = L. braziliensis Syntenic Genes
citation     = Genes found within syntenic spans

#################################################

[SyntenySpansLmajorMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania major/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = L. major genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>L. major</i>.

[SyntenyGenesLMajorMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania major/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = L. major Syntenic Genes
citation     = Genes found within syntenic spans

#################################################

[SyntenySpansLInfantumMC]
feature      = match:syntenySpanMC
preset       = ESTsGenesAndSynteny
category     = 5. Syntenic Regions
glyph        = arrow
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania infantum/;
                }
label        = 0
relative_coords = 1 
relative_coords_offset = sub { my $f = shift; my ($off) = $f->get_tag_values("SynStart"); my ($scale) = $f->get_tag_values("Scale");$off*$scale }
scale        = sub { my $f = shift; my ($scale) = $f->get_tag_values("Scale"); $scale }
linewidth    = 2
tick         = 2
base         = 1
stranded     = 1
tkcolor      = azure
height       = 8 
title = 1
link_target        = \&synSpanTitle
link         = \&synSpanLink
key          = L. infantum genomic sequences
citation     = Stretches of likely chromosomal synteny to <i>L. infantum</i>.

[SyntenyGenesLInfantumMC]
feature      = gene:syntenyMC
preset       = ESTsGenesAndSynteny
category     = 4. Syntenic Genes
glyph        = processed_transcript
filter       = sub {
                 my $f = shift;
                 my ($taxon) = $f->get_tag_values("Taxon");
                 $taxon eq qq /Leishmania infantum/;
                }
description  = 0
label        = 0
font2color   = darkgrey
tkcolor      = azure
bgcolor      = sub {
                 my $f = shift;
     $f->strand == +1 ? "blue" : "red";
               }
height       = 8 
title = 1
link_target        = \&synGeneTitle
link         = /gene/$name
key          = L. infantum Syntenic Genes
citation     = Genes found within syntenic spans


[DoTSAssemblies]
feature      = alignment:DoTSAssemblies
category     = 3. Transcript Expression Evidence
glyph        = graded_segments
bgcolor      = sub { my ($f, undef, undef, undef, $glyph) = @_;
                     my $flip = $glyph->{flip};
                     $f->strand == ($flip ? -1 : 1) ? "navy" : "maroon";
                }
description  = 0
height       = 8
title        = sub { my $f = shift;
                     my $name  = $f->name; 
                     my $start = $f->start;
                     my $stop  = $f->stop;
                     my @data; 
                     my ($percent_identity) = $f->get_tag_values("PercentIdentity");
                     my ($count) = $f->get_tag_values("Count");
                     push @data, [ 'Name:' => $name ]; 
                     push @data, [ 'Start:'  => $start ];
                     push @data, [ 'Stop:'   => $stop ];
                     push @data, [ 'Percent Identity:' => $percent_identity ]; 
                     push @data, [ 'Count of ESTs:' => $count ]; 
                     hover("DoTS EST Assemblies: $name", \@data);
               }
link        = sub { my $f = shift;
                    my $name = $f->name;
                    my $link = "/toxo/showRecord.do?name=AssemblyRecordClasses.AssemblyRecordClass&project_id=&primary_key=$name";
                    return $link;
               }
glyph        = graded_segments
strand_arrow = 0
bump_limit   = 50
key          = DoTS EST Assemblies
citation     =  DoTS stands for The Database of Transcribed Sequences. The naming of this feature as "DoTS EST Assemblies" is for historical reasons only. This track shows <a href="http://www.ncbi.nlm.nih.gov/pubmed/11932250">BLAT</a> alignment of consensus transcript sequences (DTs) to the genome. DTs are generated by clustering ESTs based on BLAT alignment to the genome followed by <a href="http://www.ncbi.nlm.nih.gov/pubmed/10508846"> CAP4</a> assembly.
