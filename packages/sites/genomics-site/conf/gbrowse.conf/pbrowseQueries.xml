<DAS>

<sanityTestInfo project="ToxoDB">
    <defaultParamValue name="name" value="TGME49_039250"/>
    <defaultParamValue name="srcfeature_id" value="$$aa_seq_id_X$$"/>
    <defaultParamValue name="base_start" value="1"/>
    <defaultParamValue name="rend" value="1311700"/>
    <defaultParamValue name="dlm" value="|"/>
    <defaultParamValue name="id" value="TGME49_039250-1"/>

    <sqlValue name="aa_seq_id_X">
      <sql>
       select aa_sequence_id from dots.translatedAaSequence where source_id like 'TGME49_039250%'
      </sql>
    </sqlValue>
</sanityTestInfo>

<sanityTestInfo project="TriTrypDB">
  <defaultParamValue name="srcfeature_id" value="$$aa_seq_id_sample_gene$$"/>
  <defaultParamValue name="base_start" value="1"/>
  <defaultParamValue name="rend" value="1000"/>
  <defaultParamValue name="dlm" value=","/>

  <sqlValue name="aa_seq_id_sample_gene">
    <sql>
  SELECT AA_SEQUENCE_ID 
  FROM   DOTS.GENEFEATURE gf, 
         DOTS.TRANSCRIPT t, 
         DOTS.TRANSLATEDAAFEATURE taf
  WHERE gf.source_id = 'Tb927.8.620'
        AND t.parent_id = gf.na_feature_id
        AND taf.na_feature_id = t.na_feature_id  
    </sql> 
  </sqlValue>
  
  <sqlValue name="aa_seq_id_sample_L_infantum_gene">
    <sql>
  SELECT AA_SEQUENCE_ID 
  FROM   DOTS.GENEFEATURE gf, 
         DOTS.TRANSCRIPT t, 
         DOTS.TRANSLATEDAAFEATURE taf
  WHERE gf.source_id = 'LinJ17_V3.0100'
        AND t.parent_id = gf.na_feature_id
        AND taf.na_feature_id = t.na_feature_id  
    </sql> 
  </sqlValue>
  
  <sqlValue name="tas_id_with_transmem">
    <sql>
  select aa_sequence_id
  from dots.TransmembraneAaFeature
  where rownum = 1
    </sql> 
  </sqlValue>
</sanityTestInfo>

  <module name="GUS.pm">
<!-- ORIGINALLY FROM: crypto -->
  <sqlQuery name="get_feature_by_name">
    <testParamValues project="TriTrypDB">
      <param name="name" value="Tb927.8.620"/>
    </testParamValues>
    <sql>
<![CDATA[
SELECT trp.source_id ctg_name, 
       tas.aa_sequence_id feature_id, 
       tas.aa_sequence_id parent_id, 
       'protein' type, 
       'annotation' source, 
       trp.protein_id name, 
       1  startm, 
       tas.length end
FROM   dots.translatedaasequence tas,
       dots.translatedaafeature taf,
       dots.transcript trp
WHERE  tas.aa_sequence_id = taf.aa_sequence_id and
       taf.na_feature_id = trp.na_feature_id and
        ( upper(substr(trp.source_id, 1, instr(trp.source_id, '-1', 1, 1) - 1)) = upper('$name') or
          upper(trp.protein_id) = upper('$name') or
          upper(trp.product) like upper('%$name%') ) 
]]>
    </sql>
  </sqlQuery>
  </module>

  <module name="Segment.pm">

<!-- ORIGINALLY FROM: crypto -->
  <sqlQuery name="new:Segment">
    <testParamValues project="TriTrypDB">
      <param name="name" value="Tb927.8.620"/>
    </testParamValues>
      <sql>
<![CDATA[
SELECT tas.aa_sequence_id srcfeature_id, 
       1 startm, 
       tas.length end, 
       gf.source_id name, 
       'protein' type,
       'ID=' || tas.aa_sequence_id atts
FROM   dots.translatedaasequence tas, 
       dots.translatedaafeature taf,
       dots.transcript trp,
       dots.genefeature gf
WHERE  tas.aa_sequence_id = taf.aa_sequence_id
       and taf.na_feature_id = trp.na_feature_id 
       and trp.parent_id = gf.na_feature_id
       and (upper(trp.protein_id) = upper('$name') or
            upper(trp.source_id) = upper('$name') or
            upper(gf.source_id) = upper('$name') )
]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="get_sequence">
      <sql>
<![CDATA[
SELECT tas.sequence 
FROM   DoTS.TranslatedAASequence tas 
WHERE  tas.aa_sequence_id = $srcfeature_id
]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="domain:MassSpecPeptides">
      <sql>
<![CDATA[
SELECT distinct
       msf.aa_feature_id feature_id,
       'domain' type,
       'MassSpecPeptides' source,
       msf.source_id name,
       aal.start_max startm,
       aal.end_max end,
       'Description=' || msf.description || '$dlm' ||
       'ExtDbName=' || ed.name || '$dlm' ||
       'Sequence=' || to_char(substr(taas.sequence,aal.start_min, aal.end_max - aal.start_min + 1)) atts
FROM  dots.massspecfeature msf,
      dots.aalocation aal,
      dots.translatedaafeature taaf,
      dots.translatedaasequence taas,
      sres.externaldatabaserelease edr,
      sres.externaldatabase ed
WHERE msf.parent_id = taaf.aa_feature_id
      AND taaf.aa_sequence_id = $srcfeature_id
      AND taaf.aa_sequence_id = taas.aa_sequence_id
      AND msf.aa_feature_id = aal.aa_feature_id
      AND msf.external_database_release_id = edr.external_database_release_id
      AND edr.external_database_id = ed.external_database_id
    ]]>
    </sql>
  </sqlQuery>

    <sqlQuery name="lowcomplexity:seg">
      <sql>
<![CDATA[ 
SELECT lc.aa_feature_id feature_id,
       'lowcomplexity' type, 
       'seg' source, 
       'low complexity region' name, 
       '.' score, 
       lc.aa_sequence_id parent_id, 
       aal.start_min startm, 
       aal.end_max end, 
       '.' strand,
       'Sequence=' || substr(aas.sequence, aal.start_min, (aal.end_max-aal.start_min+1)) atts
FROM   dots.LowComplexityAAFeature lc,
       dots.AALocation aal, dots.AASequence aas
WHERE  lc.aa_feature_id = aal.aa_feature_id and
       lc.aa_sequence_id = aas.aa_sequence_id and
       aal.start_min <= $rend and 
       aal.end_max >= $base_start and 
       lc.aa_sequence_id = $srcfeature_id 
ORDER BY aal.start_min
]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="get_2d_struc">
       <sql>
<![CDATA[
SELECT ssc.structure_type, ssc.call_confidence 
FROM   DoTS.SecondaryStructure ss,
       DoTS.SecondaryStructureCall ssc
WHERE  ss.aa_sequence_id = $srcfeature_id and
       ss.secondary_structure_id = ssc.secondary_structure_id
]]>
      </sql>
    </sqlQuery>

<!-- Was only in: plasmo -->
    <sqlQuery name="domain:ExportPred" includeProjects="PlasmoDB">
    <testParamValues project="PlasmoDB">
       <param name="srcfeature_id" value="$$aa_seq_id_PF14_0010$$"/>    
    </testParamValues>
      <sql>
<![CDATA[
SELECT DISTINCT df.aa_feature_id feature_id,
       'domain' type,
       'ExportPred' source,
       df.aa_feature_id name,
       '.' score,
       df.parent_id parent_id,
       min(aal.start_min) startm,
       max(aal.end_max) end,
       '.' strand,
       'ID=' || df.aa_feature_id atts
FROM   dots.domainfeature df,
       dots.aasequence aas,
       dots.aalocation aal
WHERE  df.algorithm_name = 'exportpred' and
       df.aa_sequence_id = $srcfeature_id and
       aas.aa_sequence_id = $srcfeature_id and
       df.aa_feature_id = aal.aa_feature_id
GROUP BY df.aa_feature_id, df.parent_id
]]>
      </sql>
    </sqlQuery>

<!-- ORIGINALLY FROM: plasmo,toxo,tritryp -->
  <sqlQuery name="domain:SignalP">
      <sql>
<![CDATA[
SELECT
       spf.aa_feature_id feature_id,
       'domain' type,
       'SignalP' source,
       spf.aa_feature_id name,
       '.' score,
       spf.parent_id parent_id,
       1 startm,
       aal.end_max end,
       '.' strand,
       'DScore=' || ((spf.means_score + spf.maxy_score) / 2) || '$dlm' ||
       'SignalProb=' || spf.signal_probability || '$dlm' ||
       'ConclusionScore=' || (spf.maxy_conclusion +
               spf.maxc_conclusion +
               spf.maxs_conclusion +
               spf.means_conclusion) as  atts
FROM
       dots.signalpeptidefeature spf,
       dots.aalocation aal
WHERE
       spf.aa_sequence_id = $srcfeature_id and
       aal.aa_feature_id = spf.aa_feature_id and
       (( spf.maxy_conclusion +
         spf.maxc_conclusion +
         spf.maxs_conclusion +
         spf.means_conclusion
       ) >= 3
       OR ((spf.means_score + spf.maxy_score) / 2) >= 0.5
       OR spf.signal_probability >= 0.5
      ) 
]]>
      </sql>
    </sqlQuery>



<!-- ORIGINALLY FROM: giardia,trich,tritryp -->
    <sqlQuery name="domain:TMHMM">
    <testParamValues project="TriTrypDB">
    <param name="srcfeature_id" value="$$tas_id_with_transmem$$"/>
    </testParamValues>
      <sql>
<![CDATA[
SELECT distinct * from (
SELECT
       tmf.aa_sequence_id feature_id,
       'domain' type,
       'TMHMM' source,
       tmf.source_id name,
       tmf.parent_id parent_id
FROM
       dots.TRANSMEMBRANEAAFEATURE tmf,
       core.ALGORITHM ALG
WHERE
       tmf.aa_sequence_id = $srcfeature_id and
       tmf.prediction_algorithm_id = alg.algorithm_id and
       alg.name = 'TMHMM'
)
]]>
      </sql>
    </sqlQuery>

  <sqlQuery name="domain:interpro">
      <sql>
<![CDATA[
SELECT df.aa_feature_id feature_id, 
       'domain' type, 
       'interpro' source, 
       dr.primary_identifier name, 
       df.score score, 
       df.parent_id parent_id, 
       min(aal.start_min) startm, 
       max(aal.end_max) end, 
       'Note=' || dr.secondary_identifier || ' ' || dr.remark || '$dlm' || 
       'Db=' || ed.name || '$dlm' || 
       'Evalue=' || df.e_value || '$dlm' || 
       'Pi=' || dr.primary_identifier atts
FROM   dots.DomainFeature df, 
       dots.DbRefAaFeature draf, 
       dots.AaLocation aal, 
       sres.DbRef dr, 
       sres.ExternalDatabaseRelease edr, 
       sres.ExternalDatabase ed, 
       core.AlgorithmInvocation ainv, 
       core.AlgorithmImplementation aimp 
WHERE  df.aa_sequence_id = $srcfeature_id and 
       aal.end_max > $base_start and 
       aal.start_min < $rend and 
       aal.aa_feature_id = df.aa_feature_id and 
       df.aa_feature_id = draf.aa_feature_id and 
       draf.db_ref_id = dr.db_ref_id and 
       dr.external_database_release_id = edr.external_database_release_id and 
       edr.external_database_id = ed.external_database_id and 
       df.row_alg_invocation_id = ainv.algorithm_invocation_id and 
       ainv.algorithm_implementation_id = aimp.algorithm_implementation_id and 
       aimp.executable = 'ApiCommonData::Load::Plugin::InsertInterproscanResults' 
       GROUP BY df.aa_feature_id, 'domain', 'interpro', dr.primary_identifier, 
                df.score, df.parent_id, '.', 
                'Note=' || dr.secondary_identifier || ' ' || dr.remark || '$dlm' || 
                'Db=' || ed.name || '$dlm' || 
                'Evalue=' || df.e_value || '$dlm' ||
                'Pi=' || dr.primary_identifier 
      ]]> 
      </sql>
  </sqlQuery>

    <sqlQuery name="match:BLASTP">
      <sql>
<![CDATA[ 
SELECT sim.similarity_id feature_id,
       'match' type, 
       'BLASTP' source, 
       eta.source_id name, 
       sim.score score, 
       sim.query_id  parent_id, 
       sim.min_query_start startm, 
       sim.max_query_end   end, 
       '.' strand,
       'Note=' || eta.description || '$dlm' ||
       'Expect=' || sim.pvalue_mant || 'e' || sim.pvalue_exp || '$dlm' ||
       'PercentIdentity=' || round(100 * sim.number_identical / sim.total_match_length) || '$dlm' ||
       'PercentPositive=' || round(100 * sim.number_positive / sim.total_match_length) atts
FROM   dots.similarity sim,
       dots.externalaasequence eta,
       dots.translatedaasequence tas, 
       core.tableinfo qtab,
       core.tableinfo stab
WHERE  sim.query_id = tas.aa_sequence_id and
       sim.subject_id = eta.aa_sequence_id and
       sim.subject_table_id = stab.table_id and
       stab.name = 'ExternalAASequence' and
       sim.query_table_id  = qtab.table_id and
       qtab.name = 'TranslatedAASequence' and
	   sim.query_id = '$srcfeature_id' and
	   RowNum < 6
ORDER BY
       to_number(sim.pvalue_mant || 'e' || sim.pvalue_exp) asc,
       sim.total_match_length desc,
       sim.score desc
]]>
      </sql>
    </sqlQuery>

  </module>

  <module name="Feature.pm">

<!-- Was only in: plasmo -->
    <sqlQuery name="domain:ExportPred:subfeatures" includeProjects="PlasmoDB">
    <testParamValues project="PlasmoDB">
      <param name="parent_id" parentFeatureTest="domain:ExportPred"/>       
    </testParamValues>
      <sql>
<![CDATA[ 
SELECT aal.aa_location_id feature_id,
       'subdomain' type,
       'ExportPred' source,
       aal.aa_location_id name,
       aal.aa_feature_id parent_id,
       '' phase,
       '.' score,
       '.' strand,
       aal.start_min startm,
       aal.end_max end,
       'ID=' || aal.aa_location_id atts
FROM   dots.aalocation aal
WHERE  aal.aa_feature_id = $parent_id
ORDER BY aal.start_min
]]>
      </sql>
    </sqlQuery>


<!-- ORIGINALLY FROM: giardia,trich,tritryp -->
    <sqlQuery name="domain:TMHMM:subfeatures">
    <testParamValues project="TriTrypDB">
    <param name="parent_id" parentFeatureTest="domain:TMHMM"/>
    </testParamValues>
      <sql>
<![CDATA[ 
SELECT
       aal.aa_location_id feature_id,
       'subdomain' type,
       'TMHMM' source,
       aal.aa_location_id name,
       aal.aa_feature_id parent_id,
       aal.start_min startm,
       aal.end_max end,
       'Topology=' || tmf.topology atts
FROM
     DoTS.transmembraneaafeature tmf,
     DoTS.aalocation aal,
     Core.algorithm alg
WHERE
       tmf.aa_feature_id = aal.aa_feature_id and
       tmf.aa_sequence_id = $parent_id and
       tmf.prediction_algorithm_id = alg.algorithm_id AND
       alg.name = 'TMHMM'
ORDER BY aal.start_min
]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="domain:interpro:subfeatures">
      <sql>
<![CDATA[ 
SELECT 
       aal.aa_location_id feature_id,
       'domain' type, 
       'interpro' source, 
       dr.primary_identifier name, 
       df.score score, 
       df.aa_feature_id parent_id, 
       aal.start_min startm, 
       aal.end_max end,
       '.' strand
FROM
       dots.DomainFeature df,
       dots.DbRefAaFeature draf,
       dots.AaLocation aal,
       sres.DbRef dr,
       sres.ExternalDatabaseRelease edr,
       sres.ExternalDatabase ed,
       core.AlgorithmInvocation ainv,
       core.AlgorithmImplementation aimp
WHERE
       df.aa_sequence_id = $srcfeature_id and
       aal.end_max > $base_start and
       aal.start_min < $rend and
       aal.aa_feature_id = df.aa_feature_id and
       df.aa_feature_id = draf.aa_feature_id and
       draf.db_ref_id = dr.db_ref_id and
       dr.external_database_release_id = edr.external_database_release_id and
       edr.external_database_id = ed.external_database_id and
       df.row_alg_invocation_id = ainv.algorithm_invocation_id and
       ainv.algorithm_implementation_id = aimp.algorithm_implementation_id and
       aimp.executable = 'ApiCommonData::Load::Plugin::InsertInterproscanResults'
]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="match:BLASTP:subfeatures">
    <testParamValues project="TriTrypDB">
       <param name="parent_id" parentFeatureTest="match:BLASTP"/> 
    </testParamValues>
      <sql>
<![CDATA[ 
SELECT simp.similarity_span_id feature_id, 
       'HSP' type, 
       'BLASTP' source, 
       simp.similarity_span_id name, 
       '.' phase, 
       simp.score || '' score, 
       simp.query_start startm, 
       simp.query_end end, 
       decode (simp.is_reversed, 0, '+1', 1, '-1', '.') strand, 
       '' atts 
FROM   dots.similarity sim, dots.similarityspan simp 
WHERE  sim.similarity_id = simp.similarity_id and 
       sim.similarity_id  = $parent_id
]]>
       </sql>
    </sqlQuery>   

  </module>

</DAS>

