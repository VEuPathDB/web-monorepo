<DAS>
  <module name="GUS.pm">
<!-- ORIGINALLY FROM: crypto -->
  <sqlQuery>
    <name>get_feature_by_name</name>
    <description>fetch features by their name</description>
    <sql>
<![CDATA[
SELECT trp.source_id ctg_name, 
       tas.aa_sequence_id feature_id, 
       tas.aa_sequence_id parent_id, 
       'protein' type, 
       'annotation' source, 
       trp.protein_id name, 
       1  startm, 
       tas.length end
FROM   dots.translatedaasequence tas,
       dots.translatedaafeature taf,
       dots.transcript trp
WHERE  tas.aa_sequence_id = taf.aa_sequence_id and
       taf.na_feature_id = trp.na_feature_id and
        ( upper(substr(trp.source_id, 1, instr(trp.source_id, '-1', 1, 1) - 1)) = upper('$name') or
          upper(trp.protein_id) = upper('$name') or
          upper(trp.product) like upper('%$name%') ) 
]]>
    </sql>
  </sqlQuery>
  </module>

  <module name="Segment.pm">

<!-- ORIGINALLY FROM: crypto -->
  <sqlQuery>
    <name>new:Segment</name>
    <description>fetch features by their name</description>
      <sql>
<![CDATA[
SELECT tas.aa_sequence_id srcfeature_id, 
       1 startm, 
       tas.length end, 
       trp.protein_id name, 
       'protein' type,
       'ID=' || tas.aa_sequence_id atts
FROM   dots.translatedaasequence tas, 
       dots.translatedaafeature taf,
       dots.transcript trp,
       dots.genefeature gf
WHERE  tas.aa_sequence_id = taf.aa_sequence_id
       and taf.na_feature_id = trp.na_feature_id 
       and trp.parent_id = gf.na_feature_id
       and (upper(trp.protein_id) = upper('$name') or
            upper(trp.source_id) = upper('$name') or
            upper(gf.source_id) = upper('$name') )
]]>
      </sql>
    </sqlQuery>

    <sqlQuery>
      <name>get_sequence</name>
      <description></description>
      <sql>
<![CDATA[
SELECT tas.sequence 
FROM   DoTS.TranslatedAASequence tas 
WHERE  tas.aa_sequence_id = $srcfeature_id
]]>
      </sql>
    </sqlQuery>

    <sqlQuery>
      <name>lowcomplexity:seg</name>
      <description></description>
      <sql>
<![CDATA[ 
SELECT lc.aa_feature_id feature_id,
       'lowcomplexity' type, 
       'seg' source, 
       'low complexity region' name, 
       '.' score, 
       lc.aa_sequence_id parent_id, 
       aal.start_min startm, 
       aal.end_max end, 
       '.' strand,
       'Sequence=' || substr(aas.sequence, aal.start_min, (aal.end_max-aal.start_min+1)) atts
FROM   dots.LowComplexityAAFeature lc,
       dots.AALocation aal, dots.AASequence aas
WHERE  lc.aa_feature_id = aal.aa_feature_id and
       lc.aa_sequence_id = aas.aa_sequence_id and
       aal.start_min <= $rend and 
       aal.end_max >= $base_start and 
       lc.aa_sequence_id = $srcfeature_id 
ORDER BY aal.start_min
]]>
      </sql>
    </sqlQuery>

    <sqlQuery>
      <name>get_2d_struc</name>
       <description></description>
       <sql>
<![CDATA[
SELECT ssc.structure_type, ssc.call_confidence 
FROM   DoTS.SecondaryStructure ss,
       DoTS.SecondaryStructureCall ssc
WHERE  ss.aa_sequence_id = $srcfeature_id and
       ss.secondary_structure_id = ssc.secondary_structure_id
]]>
      </sql>
    </sqlQuery>

<!-- ORIGINALLY FROM: plasmo,toxo,tritryp -->
  <sqlQuery>
      <name>domain:SignalP</name>
      <description></description>
      <sql>
<![CDATA[
SELECT
       spf.aa_feature_id feature_id,
       'domain' type,
       'SignalP' source,
       spf.aa_feature_id name,
       '.' score,
       spf.parent_id parent_id,
       1 startm,
       aal.end_max end,
       '.' strand,
       'DScore=' || ((spf.means_score + spf.maxy_score) / 2) || '$dlm' ||
       'SignalProb=' || spf.signal_probability || '$dlm' ||
       'ConclusionScore=' || (spf.maxy_conclusion +
               spf.maxc_conclusion +
               spf.maxs_conclusion +
               spf.means_conclusion) as  atts
FROM
       dots.signalpeptidefeature spf,
       dots.aalocation aal
WHERE
       spf.aa_sequence_id = $srcfeature_id and
       aal.aa_feature_id = spf.aa_feature_id and
       (( spf.maxy_conclusion +
         spf.maxc_conclusion +
         spf.maxs_conclusion +
         spf.means_conclusion
       ) >= 3
       OR ((spf.means_score + spf.maxy_score) / 2) >= 0.5
       OR spf.signal_probability >= 0.5
      ) 
]]>
      </sql>
    </sqlQuery>



<!-- ORIGINALLY FROM: giardia,trich,tritryp -->
    <sqlQuery>
      <name>domain:TMHMM</name>
      <description></description>
      <sql>
<![CDATA[
SELECT distinct * from (
SELECT
       tmf.aa_sequence_id feature_id,
       'domain' type,
       'TMHMM' source,
       tmf.source_id name,
       tmf.parent_id parent_id
FROM
       dots.TRANSMEMBRANEAAFEATURE tmf,
       core.ALGORITHM ALG
WHERE
       tmf.aa_sequence_id = $srcfeature_id and
       tmf.prediction_algorithm_id = alg.algorithm_id and
       alg.name = 'TMHMM'
)
]]>
      </sql>
    </sqlQuery>

  </module>

  <module name="Feature.pm">
    <sqlQuery>
      <name></name>
      <description></description>
      <sql>
      </sql>
    </sqlQuery>

<!-- ORIGINALLY FROM: giardia,trich,tritryp -->
    <sqlQuery>
      <name>domain:TMHMM:subfeatures</name>
      <description> </description>
      <sql>
<![CDATA[ 
SELECT
       aal.aa_location_id feature_id,
       'subdomain' type,
       'TMHMM' source,
       aal.aa_location_id name,
       aal.aa_feature_id parent_id,
       aal.start_min startm,
       aal.end_max end,
       'Topology=' || tmf.topology atts
FROM
     DoTS.transmembraneaafeature tmf,
     DoTS.aalocation aal,
     Core.algorithm alg
WHERE
       tmf.aa_feature_id = aal.aa_feature_id and
       tmf.aa_sequence_id = $parent_id and
       tmf.prediction_algorithm_id = alg.algorithm_id AND
       alg.name = 'TMHMM'
ORDER BY aal.start_min
]]>
      </sql>
    </sqlQuery>

  </module>

</DAS>

