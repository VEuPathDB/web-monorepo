--- RenderPanels.pm.orig	2011-11-09 13:32:32.000000000 -0500
+++ RenderPanels.pm	2011-11-09 13:56:19.000000000 -0500
@@ -253,6 +253,9 @@
     my $feature_files  = $args->{external_features};
     my $labels         = $args->{labels};
 
+    # eupathdb pass labels to crate_panel_args 11/9/2011
+    $args->{labels} = $labels;
+
     warn "[$$] MAKE_REQUESTS, labels = ",join ',',@$labels if DEBUG;
 
     my $base        = $self->get_cache_base();
@@ -1465,6 +1468,15 @@
 
 		    warn "track_setup($label): ",time()-$time," seconds " if BENCHMARK;
 
+        # EuPathDB patches 9/28/2011
+        my @array = @$track_args;
+        my ($sqlParam, $sqlName);
+        my ($index) = grep { $array[$_] =~ /sqlParam/i } 0..$#array;
+        $sqlParam = $array[$index+1] if $index;
+        my ($index2) = grep { $array[$_] =~ /sqlName/i } 0..$#array;
+        $sqlName = $array[$index2+1] if $index;
+        # end EuPathDB patches 
+
 		    # == populate the tracks with feature data ==
 		    $self->add_features_to_track(
 			-labels    => [ $label, ],
@@ -1472,6 +1484,8 @@
 			-filters   => $filters,
 			-segment   => $segment,
 			-fsettings => $settings->{features},
+      -sqlParam  => [$sqlParam],
+      -sqlName   => [$sqlName], 
 			);
 
 		    warn "add_features($label): ",time()-$time," seconds " if BENCHMARK;
@@ -1595,6 +1609,8 @@
   my $tracks          = $args{-tracks}    or die "programming error";
   my $filters         = $args{-filters}   or die "programming error";
   my $fsettings       = $args{-fsettings} or die "programming error";
+  my $sqlParam        = $args{-sqlParam} or die "programming error";
+  my $sqlName         = $args{-sqlName} or die "programming error";
 
   warn "[$$] add_features_to_track @{$args{-labels}}" if DEBUG;
 
@@ -1636,7 +1652,7 @@
 	  $iterator2dbid{$iterator} = $source->db2id($db);
       }
 
-      if (@full_types && (my $iterator = $self->get_iterator($db2db{$db},$segment,\@full_types))) {
+      if (@full_types && (my $iterator = $self->get_iterator($db2db{$db},$segment,\@full_types,$sqlName,$sqlParam))) {
 	  $iterators{$iterator}     = $iterator;
 	  $iterator2dbid{$iterator} = $source->db2id($db);
       }
@@ -1849,7 +1865,7 @@
 
 sub get_iterator {
   my $self = shift;
-  my ($db,$segment,$feature_types,$max) = @_;
+  my ($db,$segment,$feature_types,$sqlName,$sqlParam,$max) = @_;
 
   # The Bio::DB::SeqFeature::Store database supports correct
   # semantics for directly retrieving features that overlap
@@ -1863,6 +1879,8 @@
 		  -start  => $segment->start,
 		  -end    => $segment->end,
 		  -max_features => $max,  # some adaptors allow this
+      -sqlParam => $sqlParam,
+      -sqlName  => $sqlName,
 	  );
       return $db->get_seq_stream(@args);
   }
@@ -1880,7 +1898,7 @@
     return;
   }
 
-  return $db_segment->get_seq_stream(-type=>$feature_types);
+  return $db_segment->get_seq_stream(-type=>$feature_types,-sqlName=>$sqlName,-sqlParam=>$sqlParam);
 }
 
 sub get_summary_iterator {
@@ -1951,6 +1969,10 @@
   my $self               = shift;
   my $args               = shift;
 
+  # eupathdb check the synteny labels 11/9/2011
+  my $labels = $args->{labels};
+  my $synview = grep(/Synteny/, @$labels) if $labels;
+
   my $segment        = $args->{segment}        || $self->segment;
   my ($seg_start,$seg_stop,$flip) = $self->segment_coordinates($segment,
 							       $args->{flip});
@@ -1977,7 +1999,8 @@
 		    ]);
   }
   elsif ($section eq 'detail'){
-    $postgrid = make_postgrid_callback($settings);
+    # eupathdb patches - checks the synteny 11/9/2011
+    $postgrid = $synview ? $source->global_setting('postgrid') : make_postgrid_callback($settings);
     $h_region_str = join(':', @{$settings->{h_region}||[]}); 
   }
 
