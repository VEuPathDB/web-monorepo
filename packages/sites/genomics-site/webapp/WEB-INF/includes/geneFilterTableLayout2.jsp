<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="bean" uri="http://struts.apache.org/tags-bean" %>
<%@ taglib prefix="html" uri="http://struts.apache.org/tags-html" %>
<%@ taglib prefix="imp" tagdir="/WEB-INF/tags/imp" %>

<c:set var="answerValue" value="${requestScope.answer_value}"/>
<c:set var="strategyId" value="${requestScope.strategy_id}"/>
<c:set var="stepId" value="${requestScope.step_id}"/>
<c:set var="layout" value="${requestScope.filter_layout}"/>

<!-- DEBUGGING 
- sortedInstances contains all filter instances (java objects AnswerFilterInstance) sorted by instance (filter) name, 
   which sets distinct filters before instance filters, for a given species
- instanceCountMap contains organism count per species, used for the species level colspan
   (sorted by key, but we do not need the sorting here, just used as map.)
- sortedFamilyCountMap contains organism count per genus (family), used for the genus level colspan
- superFamilyCountMap contains organism count per phylum (superfamily), used for the phylum level colspan

Some examples of filter names the injector system generates:
-Fungi-Eurotiomycetes-Aspergillus-aculeatus_AA_distinct_gene_instances"
-Fungi-Eurotiomycetes-Aspergillus-aculeatus_AacuATCC16872_instances
-Fungi-Eurotiomycetes-Aspergillus-niger_AA_distinct_gene_instances"
-Fungi-Eurotiomycetes-Aspergillus-niger_AnigCBS513-88_instances
-Apicomplexa-Cryptosporidium-hominis_AA_distinct_gene_instances
-Apicomplexa-Cryptosporidium-hominis_chomTU502_instances


		 <c:forEach items="${layout.sortedInstances}" var="instance">
			 <c:set var="familySpecies" value="${fn:substringBefore(instance.name,'_')}" />
			 <br>${familySpecies} -----  ${layout.instanceCountMap[familySpecies]} ---- ${instance.name} <br>
		 </c:forEach>

     <c:forEach items="${layout.instanceCountMap}" var="perSpeciesCounts">
			 <br>${perSpeciesCounts} <br>    <%-- SAME AS:  ${perSpeciesCounts.key} = ${perSpeciesCounts.value} --%>
		 </c:forEach>

	   <c:forEach items="${layout.sortedFamilyCountMap}" var="perGenusCounts" >
       <br>${perGenusCounts}<br>
		 </c:forEach>

     <c:forEach items="${layout.superFamilyCountMap}" var="perPhylumCounts" >
       <br>${perPhylumCounts}<br>
		 </c:forEach>

-->

<table id="geneFilters">

	<!-- ========================PHYLUM (if provided) and  FAMILY TITLE (includes all and orthologs)  ================ -->
	<!-- ================================================= -->
  <c:choose>

  <c:when test="${fn:length(layout.superFamilyCountMap) > 1 }">
    <tr>
      <th rowspan=4>All<br>Results</th>
      <th rowspan=4>Ortholog<br>Groups</th>
    <c:forEach items="${layout.superFamilyCountMap}" var="phylum" >
      <th class="phylum" colspan="${phylum.value}"><i>${phylum.key}</i></th>
	  </c:forEach>
    </tr>
    <tr>
    <c:forEach items="${layout.sortedFamilyCountMap}" var="family" >
    	<th class="genus" colspan="${family.value}"><i>${fn:substringAfter(family.key,'-')}</i></th>
 		</c:forEach>
    </tr>
  </c:when>
  <c:when test="${fn:length(layout.superFamilyCountMap) == 1 }" >
    <tr>
      <th rowspan=3>All<br>Results</th>
      <th rowspan=3>Ortholog<br>Groups</th>
 		<c:forEach items="${layout.sortedFamilyCountMap}" var="family" >
    	<th  class="genus"  colspan="${family.value}"><i>${fn:substringAfter(family.key,'-')}</i></th>
 		</c:forEach>
    </tr>
  </c:when>
  <c:otherwise>
    <tr>
      <th rowspan=3>All<br>Results</th>
      <th rowspan=3>Ortholog<br>Groups</th>
 		<c:forEach items="${layout.sortedFamilyCountMap}" var="family" >
    	<th  class="genus"  colspan="${family.value}"><i>${family.key}</i></th>
 		</c:forEach>
    </tr>
  </c:otherwise>

  </c:choose>

	<!-- ========================= SPECIES TITLE  (if distinct true will generate a gene count) ================ -->
	<!-- ================================================= -->
	<%-- the assumption is that a species with more than one organism HAS one organism as reference strain (by loaders), 
			 SUCH that a distinct filter is generated by the injectors.
			 With this assumption, the first 2 <c:when> cases below would take care of ALL species.
			 With Giardia Assemblage case, in the absence of a distinct filter for a species with more than one organism, 
			 we need to add the third case below.
			 But in order to work we need to sort distinct filters to appear first, so we add _AA_ in their name.
  --%>
  <tr>
		<c:forEach items="${layout.sortedInstances}" var="instance">        
 
     <%-- ONLY PARSING IN THIS FILE, more detailed parsing will be performed in the tag file that generates the row --%> 
			<c:set var="familySpecies" value="${fn:substringBefore(instance.name,'_')}" />

			<c:choose>
				<%-- =============== distinct filter found for a species that has MORE than ONE organism ============== --%>
				<c:when test="${layout.instanceCountMap[familySpecies] ne '1' && 
                      fn:contains(instance.name,'distinct')
											}">
					<th colspan="${layout.instanceCountMap[familySpecies]}">
						<imp:filterInstance2 strategyId="${strategyId}" stepId="${stepId}" answerValue="${answerValue}" 
				 												 instanceName="${instance.name}" 
																 distinct="true"/> 
					</th>
				</c:when>
				<%-- =============== NOT distinct filter found for a species that has ONLY ONE organism ============== --%>
 				<c:when test="${layout.instanceCountMap[familySpecies] == 1 && 
                      !fn:contains(instance.name,'distinct')
											}">
					<th>
						<imp:filterInstance2 strategyId="${strategyId}" stepId="${stepId}" answerValue="${answerValue}" 
																 instanceName="${instance.name}" 
																 titleSpecies="true"/> 
					</th>
				</c:when>
				<%-- =============== a NON distinct filter will be USED for a species that has MORE than ONE organism,
                             ONLY WHEN it does not have a distinct filter generated (no reference strain has been set) ============== --%>
				<c:when test="${layout.instanceCountMap[familySpecies] ne '1' && 
											!fn:contains(instance.name,'distinct') &&  
											!fn:contains(familySpeciesList,fn:trim(familySpecies))  eq 'true' &&
											familySpecies ne 'all' 
											}">
          <th colspan="${layout.instanceCountMap[familySpecies]}">
            <imp:filterInstance2 strategyId="${strategyId}" stepId="${stepId}" answerValue="${answerValue}" 
				 												 instanceName="${instance.name}"  
																 titleSpecies="true"
																 missRefStrain="true" />
          </th>
				</c:when>
			</c:choose>

     <%-- This is used to avoid third case above, when there is already a species title in place --%>
			<c:set var="familySpeciesList" value="${familySpeciesList} ${familySpecies}" />
			<%-- DEBUG 
					 <br>${familySpeciesList}<br>
		  --%>

		</c:forEach>
  </tr>

	<!-- ========================== STRAIN TITLE (total strain count)  ================ -->
	<!-- =================================================== -->

  <tr>
    <c:forEach items="${layout.sortedInstances}" var="instance">         
      <c:set var="familySpecies" value="${fn:substringBefore(instance.name,'_')}" />

    	<c:if test="${familySpecies ne 'all' && !fn:contains(instance.name,'distinct')}" >
        <th>
          <imp:filterInstance2 strategyId="${strategyId}" stepId="${stepId}" answerValue="${answerValue}" 
															 instanceName="${instance.name}" 	
															 titleStrain="true"/> 
        </th>
      </c:if>
    </c:forEach>
  </tr>

	<!-- ==========================  COUNTS (all + orthologs + total strain count)  ================ -->
	<!-- =================================================== -->

  <tr>
    <td>
      <imp:filterInstance2 strategyId="${strategyId}" 
                           stepId="${stepId}" 
                           answerValue="${answerValue}" 
                           instanceName="all_results" />  
    </td>
    <td>
      <imp:filterInstance2 strategyId="${strategyId}" 
                           stepId="${stepId}" 
                           answerValue="${answerValue}" 
                           instanceName="all_ortholog_groups" />  
    </td>

    <c:forEach items="${layout.sortedInstances}" var="instance">         
      <c:set var="familySpecies" value="${fn:substringBefore(instance.name,'_')}" />

	    <c:if test="${familySpecies ne 'all' && !fn:contains(instance.name,'distinct')}" >
        <td>
          <imp:filterInstance2 strategyId="${strategyId}" 
                               stepId="${stepId}" 
                               answerValue="${answerValue}" 
															 instanceName="${instance.name}" /> 
        </td>
      </c:if>
    </c:forEach>
  </tr>

</table>
